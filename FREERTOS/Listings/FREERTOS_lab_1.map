Component: ARM Compiler 6.14.1 Tool: armlink [5db06d00]

==============================================================================

Section Cross References

    main.o(.text) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.text) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.text) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.text) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.text) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.text) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.text.UART_SendChar) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.text.UART_SendChar) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.text.UART_SendChar) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.text.UART_SendChar) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.text.UART_SendChar) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.text.UART_SendChar) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.ARM.exidx.text.UART_SendChar) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.ARM.exidx.text.UART_SendChar) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.ARM.exidx.text.UART_SendChar) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.ARM.exidx.text.UART_SendChar) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.ARM.exidx.text.UART_SendChar) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.ARM.exidx.text.UART_SendChar) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.ARM.exidx.text.UART_SendChar) refers to main.o(.text.UART_SendChar) for [Anonymous Symbol]
    main.o(.text.UART_SendString) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.text.UART_SendString) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.text.UART_SendString) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.text.UART_SendString) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.text.UART_SendString) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.text.UART_SendString) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.text.UART_SendString) refers to main.o(.text.UART_SendChar) for UART_SendChar
    main.o(.ARM.exidx.text.UART_SendString) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.ARM.exidx.text.UART_SendString) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.ARM.exidx.text.UART_SendString) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.ARM.exidx.text.UART_SendString) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.ARM.exidx.text.UART_SendString) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.ARM.exidx.text.UART_SendString) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.ARM.exidx.text.UART_SendString) refers to main.o(.text.UART_SendString) for [Anonymous Symbol]
    main.o(.text.UART_Init) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.text.UART_Init) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.text.UART_Init) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.text.UART_Init) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.text.UART_Init) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.text.UART_Init) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.ARM.exidx.text.UART_Init) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.ARM.exidx.text.UART_Init) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.ARM.exidx.text.UART_Init) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.ARM.exidx.text.UART_Init) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.ARM.exidx.text.UART_Init) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.ARM.exidx.text.UART_Init) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.ARM.exidx.text.UART_Init) refers to main.o(.text.UART_Init) for [Anonymous Symbol]
    main.o(.text.GPIO_Init) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.text.GPIO_Init) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.text.GPIO_Init) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.text.GPIO_Init) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.text.GPIO_Init) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.text.GPIO_Init) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.ARM.exidx.text.GPIO_Init) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.ARM.exidx.text.GPIO_Init) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.ARM.exidx.text.GPIO_Init) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.ARM.exidx.text.GPIO_Init) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.ARM.exidx.text.GPIO_Init) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.ARM.exidx.text.GPIO_Init) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.ARM.exidx.text.GPIO_Init) refers to main.o(.text.GPIO_Init) for [Anonymous Symbol]
    main.o(.text.ADC_Init) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.text.ADC_Init) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.text.ADC_Init) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.text.ADC_Init) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.text.ADC_Init) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.text.ADC_Init) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.ARM.exidx.text.ADC_Init) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.ARM.exidx.text.ADC_Init) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.ARM.exidx.text.ADC_Init) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.ARM.exidx.text.ADC_Init) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.ARM.exidx.text.ADC_Init) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.ARM.exidx.text.ADC_Init) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.ARM.exidx.text.ADC_Init) refers to main.o(.text.ADC_Init) for [Anonymous Symbol]
    main.o(.text.ADC_Read) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.text.ADC_Read) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.text.ADC_Read) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.text.ADC_Read) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.text.ADC_Read) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.text.ADC_Read) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.ARM.exidx.text.ADC_Read) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.ARM.exidx.text.ADC_Read) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.ARM.exidx.text.ADC_Read) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.ARM.exidx.text.ADC_Read) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.ARM.exidx.text.ADC_Read) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.ARM.exidx.text.ADC_Read) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.ARM.exidx.text.ADC_Read) refers to main.o(.text.ADC_Read) for [Anonymous Symbol]
    main.o(.text.vTemperatureTask) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.text.vTemperatureTask) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.text.vTemperatureTask) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.text.vTemperatureTask) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.text.vTemperatureTask) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.text.vTemperatureTask) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.text.vTemperatureTask) refers to main.o(.bss.xSensorDataQueue) for xSensorDataQueue
    main.o(.text.vTemperatureTask) refers to main.o(.text.ADC_Read) for ADC_Read
    main.o(.text.vTemperatureTask) refers to fflt_clz.o(x$fpl$ffltu) for __aeabi_ui2f
    main.o(.text.vTemperatureTask) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    main.o(.text.vTemperatureTask) refers to fdiv.o(x$fpl$fdiv) for __aeabi_fdiv
    main.o(.text.vTemperatureTask) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    main.o(.text.vTemperatureTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.vTemperatureTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.ARM.exidx.text.vTemperatureTask) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.ARM.exidx.text.vTemperatureTask) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.ARM.exidx.text.vTemperatureTask) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.ARM.exidx.text.vTemperatureTask) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.ARM.exidx.text.vTemperatureTask) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.ARM.exidx.text.vTemperatureTask) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.ARM.exidx.text.vTemperatureTask) refers to main.o(.text.vTemperatureTask) for [Anonymous Symbol]
    main.o(.text.vHeartRateTask) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.text.vHeartRateTask) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.text.vHeartRateTask) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.text.vHeartRateTask) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.text.vHeartRateTask) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.text.vHeartRateTask) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.text.vHeartRateTask) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    main.o(.text.vHeartRateTask) refers to main.o(.bss.xSensorDataQueue) for xSensorDataQueue
    main.o(.text.vHeartRateTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.vHeartRateTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.vHeartRateTask) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.ARM.exidx.text.vHeartRateTask) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.ARM.exidx.text.vHeartRateTask) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.ARM.exidx.text.vHeartRateTask) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.ARM.exidx.text.vHeartRateTask) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.ARM.exidx.text.vHeartRateTask) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.ARM.exidx.text.vHeartRateTask) refers to main.o(.text.vHeartRateTask) for [Anonymous Symbol]
    main.o(.text.vCommunicationTask) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.text.vCommunicationTask) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.text.vCommunicationTask) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.text.vCommunicationTask) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.text.vCommunicationTask) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.text.vCommunicationTask) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.text.vCommunicationTask) refers to main.o(.bss.xSensorDataQueue) for xSensorDataQueue
    main.o(.text.vCommunicationTask) refers to main.o(.bss.xCommQueue) for xCommQueue
    main.o(.text.vCommunicationTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    main.o(.text.vCommunicationTask) refers to f2d.o(x$fpl$f2d) for __aeabi_f2d
    main.o(.text.vCommunicationTask) refers to noretval__2snprintf.o(.text) for __2snprintf
    main.o(.text.vCommunicationTask) refers to main.o(.text.UART_SendString) for UART_SendString
    main.o(.text.vCommunicationTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.vCommunicationTask) refers to fcmp.o(x$fpl$fcmp) for __aeabi_fcmpgt
    main.o(.ARM.exidx.text.vCommunicationTask) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.ARM.exidx.text.vCommunicationTask) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.ARM.exidx.text.vCommunicationTask) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.ARM.exidx.text.vCommunicationTask) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.ARM.exidx.text.vCommunicationTask) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.ARM.exidx.text.vCommunicationTask) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.ARM.exidx.text.vCommunicationTask) refers to main.o(.text.vCommunicationTask) for [Anonymous Symbol]
    main.o(.text.vDisplayTask) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.text.vDisplayTask) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.text.vDisplayTask) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.text.vDisplayTask) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.text.vDisplayTask) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.text.vDisplayTask) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.text.vDisplayTask) refers to main.o(.bss.xCommQueue) for xCommQueue
    main.o(.text.vDisplayTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    main.o(.text.vDisplayTask) refers to f2d.o(x$fpl$f2d) for __aeabi_f2d
    main.o(.text.vDisplayTask) refers to noretval__2snprintf.o(.text) for __2snprintf
    main.o(.text.vDisplayTask) refers to main.o(.text.UART_SendString) for UART_SendString
    main.o(.ARM.exidx.text.vDisplayTask) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.ARM.exidx.text.vDisplayTask) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.ARM.exidx.text.vDisplayTask) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.ARM.exidx.text.vDisplayTask) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.ARM.exidx.text.vDisplayTask) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.ARM.exidx.text.vDisplayTask) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.ARM.exidx.text.vDisplayTask) refers to main.o(.text.vDisplayTask) for [Anonymous Symbol]
    main.o(.text.ESP8266_Init) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.text.ESP8266_Init) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.text.ESP8266_Init) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.text.ESP8266_Init) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.text.ESP8266_Init) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.text.ESP8266_Init) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.text.ESP8266_Init) refers to main.o(.text.UART_SendString) for UART_SendString
    main.o(.text.ESP8266_Init) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.ARM.exidx.text.ESP8266_Init) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.ARM.exidx.text.ESP8266_Init) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.ARM.exidx.text.ESP8266_Init) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.ARM.exidx.text.ESP8266_Init) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.ARM.exidx.text.ESP8266_Init) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.ARM.exidx.text.ESP8266_Init) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.ARM.exidx.text.ESP8266_Init) refers to main.o(.text.ESP8266_Init) for [Anonymous Symbol]
    main.o(.text.main) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.text.main) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.text.main) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.text.main) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.text.main) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.text.main) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.text.main) refers to main.o(.text.GPIO_Init) for GPIO_Init
    main.o(.text.main) refers to main.o(.text.UART_Init) for UART_Init
    main.o(.text.main) refers to main.o(.text.ADC_Init) for ADC_Init
    main.o(.text.main) refers to main.o(.text.ESP8266_Init) for ESP8266_Init
    main.o(.text.main) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    main.o(.text.main) refers to main.o(.bss.xSensorDataQueue) for xSensorDataQueue
    main.o(.text.main) refers to main.o(.bss.xCommQueue) for xCommQueue
    main.o(.text.main) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    main.o(.text.main) refers to main.o(.bss.xI2CSemaphore) for xI2CSemaphore
    main.o(.text.main) refers to main.o(.bss.xTempTaskHandle) for xTempTaskHandle
    main.o(.text.main) refers to main.o(.text.vTemperatureTask) for vTemperatureTask
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to main.o(.bss.xHeartRateTaskHandle) for xHeartRateTaskHandle
    main.o(.text.main) refers to main.o(.text.vHeartRateTask) for vHeartRateTask
    main.o(.text.main) refers to main.o(.bss.xCommTaskHandle) for xCommTaskHandle
    main.o(.text.main) refers to main.o(.text.vCommunicationTask) for vCommunicationTask
    main.o(.text.main) refers to main.o(.bss.xDisplayTaskHandle) for xDisplayTaskHandle
    main.o(.text.main) refers to main.o(.text.vDisplayTask) for vDisplayTask
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.ARM.exidx.text.main) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.ARM.exidx.text.main) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.ARM.exidx.text.main) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.ARM.exidx.text.main) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.ARM.exidx.text.main) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.bss.xSensorDataQueue) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.bss.xSensorDataQueue) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.bss.xSensorDataQueue) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.bss.xSensorDataQueue) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.bss.xSensorDataQueue) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.bss.xSensorDataQueue) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.bss.xCommQueue) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.bss.xCommQueue) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.bss.xCommQueue) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.bss.xCommQueue) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.bss.xCommQueue) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.bss.xCommQueue) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.bss.xI2CSemaphore) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.bss.xI2CSemaphore) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.bss.xI2CSemaphore) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.bss.xI2CSemaphore) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.bss.xI2CSemaphore) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.bss.xI2CSemaphore) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.bss.xTempTaskHandle) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.bss.xTempTaskHandle) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.bss.xTempTaskHandle) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.bss.xTempTaskHandle) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.bss.xTempTaskHandle) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.bss.xTempTaskHandle) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.bss.xHeartRateTaskHandle) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.bss.xHeartRateTaskHandle) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.bss.xHeartRateTaskHandle) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.bss.xHeartRateTaskHandle) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.bss.xHeartRateTaskHandle) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.bss.xHeartRateTaskHandle) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.bss.xCommTaskHandle) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.bss.xCommTaskHandle) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.bss.xCommTaskHandle) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.bss.xCommTaskHandle) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.bss.xCommTaskHandle) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.bss.xCommTaskHandle) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.bss.xDisplayTaskHandle) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.bss.xDisplayTaskHandle) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.bss.xDisplayTaskHandle) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.bss.xDisplayTaskHandle) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.bss.xDisplayTaskHandle) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.bss.xDisplayTaskHandle) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    main.o(.ARM.use_no_argv) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.ARM.use_no_argv) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(.ARM.use_no_argv) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(.ARM.use_no_argv) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.ARM.use_no_argv) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.ARM.use_no_argv) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    startup_tm4c123.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(STACK) for __initial_sp
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(.text) for Reset_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_tm4c123.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(.text) refers to system_tm4c123.o(.text.SystemInit) for SystemInit
    startup_tm4c123.o(.text) refers to __main.o(!!!main) for __main
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(HEAP) for Heap_Mem
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(STACK) for Stack_Mem
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.getOscClk) for getOscClk
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_tm4c123.o(.text.getOscClk) refers to system_tm4c123.o(.rodata..Lswitch.table.getOscClk) for .Lswitch.table.getOscClk
    system_tm4c123.o(.ARM.exidx.text.getOscClk) refers to system_tm4c123.o(.text.getOscClk) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.SystemInit) refers to system_tm4c123.o(.text.SystemInit) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.text.SVC_Handler) for SVC_Handler
    port.o(.text.xPortStartScheduler) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for eTaskConfirmSleepModeStatus
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.vTaskStepTick) for vTaskStepTick
    port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep) refers to port.o(.text.vPortSuppressTicksAndSleep) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    heap_2.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.bss.xHeapHasBeenInitialised) for xHeapHasBeenInitialised
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.text.prvHeapInit) for prvHeapInit
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.data.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.bss.xStart) for xStart
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.bss.xEnd) for xEnd
    heap_2.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_2.o(.ARM.exidx.text.pvPortMalloc) refers to heap_2.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_2.o(.text.prvHeapInit) refers to heap_2.o(.bss.ucHeap) for ucHeap
    heap_2.o(.text.prvHeapInit) refers to heap_2.o(.bss.xStart) for xStart
    heap_2.o(.text.prvHeapInit) refers to heap_2.o(.bss.xEnd) for xEnd
    heap_2.o(.ARM.exidx.text.prvHeapInit) refers to heap_2.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_2.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_2.o(.text.vPortFree) refers to heap_2.o(.bss.xStart) for xStart
    heap_2.o(.text.vPortFree) refers to heap_2.o(.data.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_2.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_2.o(.ARM.exidx.text.vPortFree) refers to heap_2.o(.text.vPortFree) for [Anonymous Symbol]
    heap_2.o(.text.xPortGetFreeHeapSize) refers to heap_2.o(.data.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_2.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_2.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_2.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_2.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_2.o(.text.pvPortCalloc) refers to heap_2.o(.text.pvPortMalloc) for pvPortMalloc
    heap_2.o(.text.pvPortCalloc) refers to rt_memclr.o(.text) for __aeabi_memclr
    heap_2.o(.ARM.exidx.text.pvPortCalloc) refers to heap_2.o(.text.pvPortCalloc) for [Anonymous Symbol]
    heap_2.o(.text.vPortHeapResetState) refers to heap_2.o(.data.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_2.o(.text.vPortHeapResetState) refers to heap_2.o(.bss.xHeapHasBeenInitialised) for xHeapHasBeenInitialised
    heap_2.o(.ARM.exidx.text.vPortHeapResetState) refers to heap_2.o(.text.vPortHeapResetState) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_2.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvNotifyQueueSetContainer) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueGiveFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_2.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueItemSize) refers to queue.o(.text.uxQueueGetQueueItemSize) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueLength) refers to queue.o(.text.uxQueueGetQueueLength) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateSet) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateSet) refers to queue.o(.text.xQueueCreateSet) for [Anonymous Symbol]
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueAddToSet) refers to queue.o(.text.xQueueAddToSet) for [Anonymous Symbol]
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueRemoveFromSet) refers to queue.o(.text.xQueueRemoveFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queue.o(.ARM.exidx.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueSelectFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueSelectFromSetFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvCreateTask) for prvCreateTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvCreateTask) refers to heap_2.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.prvCreateTask) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks.o(.text.prvCreateTask) refers to heap_2.o(.text.vPortFree) for vPortFree
    tasks.o(.text.prvCreateTask) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.ARM.exidx.text.prvCreateTask) refers to tasks.o(.text.prvCreateTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_2.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskBasePriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskBasePriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskBasePriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskBasePriorityGet) refers to tasks.o(.text.uxTaskBasePriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskBasePriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskBasePriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskBasePriorityGetFromISR) refers to tasks.o(.text.uxTaskBasePriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvCreateIdleTasks) for prvCreateIdleTasks
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvCreateIdleTasks) refers to tasks.o(.bss.xIdleTaskHandles) for xIdleTaskHandles
    tasks.o(.text.prvCreateIdleTasks) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.prvCreateIdleTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.ARM.exidx.text.prvCreateIdleTasks) refers to tasks.o(.text.prvCreateIdleTasks) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for xTimerGetTimerDaemonTaskHandle
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xIdleTaskHandles) for xIdleTaskHandles
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetHandle) refers to strlen.o(.text) for strlen
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.prvSearchForNameWithinSingleList) for prvSearchForNameWithinSingleList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.xTaskGetHandle) refers to tasks.o(.text.xTaskGetHandle) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvSearchForNameWithinSingleList) refers to tasks.o(.text.prvSearchForNameWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetIdleTaskHandle) refers to tasks.o(.bss.xIdleTaskHandles) for xIdleTaskHandles
    tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle) refers to tasks.o(.text.xTaskGetIdleTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetIdleTaskHandleForCore) refers to tasks.o(.bss.xIdleTaskHandles) for xIdleTaskHandles
    tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandleForCore) refers to tasks.o(.text.xTaskGetIdleTaskHandleForCore) for [Anonymous Symbol]
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskStepTick) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.vTaskStepTick) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskStepTick) refers to tasks.o(.text.vTaskStepTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.xTaskAbortDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskAbortDelay) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGetInfo) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.text.uxTaskGetStackHighWaterMark2) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandleForCore) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandleForCore) refers to tasks.o(.text.xTaskGetCurrentTaskHandleForCore) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskResetState) refers to tasks.o(.text.vTaskResetState) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvGetExpectedIdleTime) for prvGetExpectedIdleTime
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortSuppressTicksAndSleep) for vPortSuppressTicksAndSleep
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.prvGetExpectedIdleTime) refers to tasks.o(.text.prvGetExpectedIdleTime) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_2.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommandFromTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommandFromTask) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommandFromTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerGenericCommandFromTask) refers to timers.o(.text.xTimerGenericCommandFromTask) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommandFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommandFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerGenericCommandFromISR) refers to timers.o(.text.xTimerGenericCommandFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for xTimerGetReloadMode
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCall) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.vTimerResetState) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.vTimerResetState) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.vTimerResetState) refers to timers.o(.text.vTimerResetState) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.text.prvProcessReceivedCommands) refers to heap_2.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvReloadTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.ARM.exidx.text.prvReloadTimer) refers to timers.o(.text.prvReloadTimer) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    __2snprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    __2snprintf.o(.text) refers to _sputc.o(.text) for _sputc
    __2snprintf.o(.text) refers to _snputc.o(.text) for _snputc
    noretval__2snprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    noretval__2snprintf.o(.text) refers to _sputc.o(.text) for _sputc
    noretval__2snprintf.o(.text) refers to _snputc.o(.text) for _snputc
    __printf.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    _printf_dec.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    __printf_flags.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags.o(.text) refers to __printf_flags.o(.constdata) for .constdata
    __printf_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to __printf_flags_ss.o(.constdata) for .constdata
    __printf_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_flags_wp.o(.constdata) for .constdata
    __printf_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_flags_ss_wp.o(.constdata) for .constdata
    _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) refers (Weak) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) refers (Special) to _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017) for _printf_percent_end
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    f2d.o(x$fpl$f2d) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    f2d.o(x$fpl$f2d) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    f2d.o(x$fpl$f2d) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    fcmp.o(x$fpl$fcmp) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmp.o(x$fpl$fcmp) refers to feqf.o(x$fpl$feqf) for _fcmpeq
    fcmp.o(x$fpl$fcmp) refers to fgeqf.o(x$fpl$fgeqf) for _fcmpge
    fcmp.o(x$fpl$fcmp) refers to fleqf.o(x$fpl$fleqf) for _fcmple
    fdiv.o(x$fpl$frdiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fdiv.o(x$fpl$frdiv) refers to fdiv.o(x$fpl$fdiv) for _fdiv1
    fdiv.o(x$fpl$fdiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fdiv.o(x$fpl$fdiv) refers to fretinf.o(x$fpl$fretinf) for __fpl_fretinf
    fdiv.o(x$fpl$fdiv) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    fflt_clz.o(x$fpl$ffltu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fflt_clz.o(x$fpl$fflt) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fflt_clz.o(x$fpl$ffltn) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fmul.o(x$fpl$fmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fmul.o(x$fpl$fmul) refers to fretinf.o(x$fpl$fretinf) for __fpl_fretinf
    fmul.o(x$fpl$fmul) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    printf1.o(x$fpl$printf1) refers to _printf_fp_dec.o(.text) for _printf_fp_dec_real
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    _printf_fp_dec.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    _printf_fp_dec.o(.text) refers (Special) to lc_numeric_c.o(locale$$code) for _get_lc_numeric
    _printf_fp_dec.o(.text) refers to bigflt0.o(.text) for _btod_etento
    _printf_fp_dec.o(.text) refers to btod.o(CL$$btod_d2e) for _btod_d2e
    _printf_fp_dec.o(.text) refers to btod.o(CL$$btod_ediv) for _btod_ediv
    _printf_fp_dec.o(.text) refers to btod.o(CL$$btod_emul) for _btod_emul
    _printf_fp_dec.o(.text) refers to lludiv10.o(.text) for _ll_udiv10
    _printf_fp_dec.o(.text) refers to fpclassify.o(i.__ARM_fpclassify) for __ARM_fpclassify
    _printf_fp_dec.o(.text) refers to _printf_fp_infnan.o(.text) for _printf_fp_infnan
    _printf_fp_dec.o(.text) refers to rt_locale_intlibspace.o(.text) for __rt_locale
    _printf_fp_dec_accurate.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    _printf_fp_dec_accurate.o(.text) refers (Special) to lc_numeric_c.o(locale$$code) for _get_lc_numeric
    _printf_fp_dec_accurate.o(.text) refers to btod_accurate.o(.text) for _btod_main
    _printf_fp_dec_accurate.o(.text) refers to fpclassify.o(i.__ARM_fpclassify) for __ARM_fpclassify
    _printf_fp_dec_accurate.o(.text) refers to _printf_fp_infnan.o(.text) for _printf_fp_infnan
    _printf_fp_dec_accurate.o(.text) refers to rt_locale_intlibspace.o(.text) for __rt_locale
    _printf_char_common.o(.text) refers to __printf_wp.o(.text) for __printf
    dretinf.o(x$fpl$dretinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    feqf.o(x$fpl$feqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    feqf.o(x$fpl$feqf) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    feqf.o(x$fpl$feqf) refers to fcmpi.o(x$fpl$fcmpinf) for __fpl_fcmp_Inf
    fgeqf.o(x$fpl$fgeqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fgeqf.o(x$fpl$fgeqf) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    fgeqf.o(x$fpl$fgeqf) refers to fcmpi.o(x$fpl$fcmpinf) for __fpl_fcmp_Inf
    fleqf.o(x$fpl$fleqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fleqf.o(x$fpl$fleqf) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    fleqf.o(x$fpl$fleqf) refers to fcmpi.o(x$fpl$fcmpinf) for __fpl_fcmp_Inf
    fnaninf.o(x$fpl$fnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fretinf.o(x$fpl$fretinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_locale.o(.text) refers to rt_locale.o(.bss) for __rt_locale_data
    rt_locale_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    bigflt0.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    bigflt0.o(.text) refers to btod.o(CL$$btod_emul) for _btod_emul
    bigflt0.o(.text) refers to btod.o(CL$$btod_ediv) for _btod_ediv
    bigflt0.o(.text) refers to bigflt0.o(.constdata) for .constdata
    bigflt0.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_d2e) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_d2e) refers to btod.o(CL$$btod_d2e_norm_op1) for _d2e_norm_op1
    btod.o(CL$$btod_d2e_norm_op1) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_d2e_norm_op1) refers to btod.o(CL$$btod_d2e_denorm_low) for _d2e_denorm_low
    btod.o(CL$$btod_d2e_denorm_low) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_emul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_emul) refers to btod.o(CL$$btod_mult_common) for __btod_mult_common
    btod.o(CL$$btod_emul) refers to btod.o(CL$$btod_e2e) for _e2e
    btod.o(CL$$btod_ediv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_ediv) refers to btod.o(CL$$btod_div_common) for __btod_div_common
    btod.o(CL$$btod_ediv) refers to btod.o(CL$$btod_e2e) for _e2e
    btod.o(CL$$btod_emuld) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_emuld) refers to btod.o(CL$$btod_mult_common) for __btod_mult_common
    btod.o(CL$$btod_emuld) refers to btod.o(CL$$btod_e2d) for _e2d
    btod.o(CL$$btod_edivd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_edivd) refers to btod.o(CL$$btod_div_common) for __btod_div_common
    btod.o(CL$$btod_edivd) refers to btod.o(CL$$btod_e2d) for _e2d
    btod.o(CL$$btod_e2e) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_e2d) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_e2d) refers to btod.o(CL$$btod_e2e) for _e2e
    btod.o(CL$$btod_mult_common) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_div_common) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod_accurate.o(.text) refers to btod_accurate_common.o(.text) for _btod_common
    lc_numeric_c.o(locale$$data) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000016) for __rt_lib_init_lc_numeric_2
    lc_numeric_c.o(locale$$code) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000016) for __rt_lib_init_lc_numeric_2
    lc_numeric_c.o(locale$$code) refers to strcmpv7em.o(.text) for strcmp
    lc_numeric_c.o(locale$$code) refers to lc_numeric_c.o(locale$$data) for __lcnum_c_name
    fcmpi.o(x$fpl$fcmpinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    istatus.o(x$fpl$ieeestatus) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fpclassify.o(i.__ARM_fpclassify) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_tm4c123.o(.text) for __user_initial_stackheap
    btod_accurate_common.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libinit2.o(.ARM.Collect$$libinit$$0000000F) refers (Weak) to rt_locale_intlibspace.o(.text) for __rt_locale
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers (Weak) to lc_numeric_c.o(locale$$code) for _get_lc_numeric
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.UART_SendChar), (8 bytes).
    Removing main.o(.ARM.exidx.text.UART_SendString), (8 bytes).
    Removing main.o(.ARM.exidx.text.UART_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.GPIO_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.ADC_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.ADC_Read), (8 bytes).
    Removing main.o(.ARM.exidx.text.vTemperatureTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.vHeartRateTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.vCommunicationTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.vDisplayTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.ESP8266_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing system_tm4c123.o(.text), (0 bytes).
    Removing system_tm4c123.o(.text.SystemCoreClockUpdate), (148 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_tm4c123.o(.text.getOscClk), (56 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.getOscClk), (8 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_tm4c123.o(.rodata..Lswitch.table.getOscClk), (92 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.text.vListInsertEnd), (28 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (38 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep), (8 bytes).
    Removing port.o(.text.vPortValidateInterruptPriority), (98 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).
    Removing heap_2.o(.text), (0 bytes).
    Removing heap_2.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_2.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_2.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_2.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_2.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_2.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_2.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_2.o(.text.pvPortCalloc), (38 bytes).
    Removing heap_2.o(.ARM.exidx.text.pvPortCalloc), (8 bytes).
    Removing heap_2.o(.text.vPortHeapResetState), (28 bytes).
    Removing heap_2.o(.ARM.exidx.text.vPortHeapResetState), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (46 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (66 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (64 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueSemaphoreTake), (426 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (50 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (302 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (282 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.text.prvGetDisinheritPriorityAfterTimeout), (18 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (376 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (248 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (132 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (38 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (42 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (26 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (30 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (6 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueItemSize), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueItemSize), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueLength), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueLength), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (30 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing queue.o(.text.xQueueCreateSet), (12 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateSet), (8 bytes).
    Removing queue.o(.text.xQueueAddToSet), (38 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueAddToSet), (8 bytes).
    Removing queue.o(.text.xQueueRemoveFromSet), (42 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueRemoveFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSet), (22 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSetFromISR), (22 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCreateTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (252 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (180 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (180 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskBasePriorityGet), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskBasePriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskBasePriorityGetFromISR), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskBasePriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (268 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (248 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (170 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (74 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (208 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCreateIdleTasks), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (62 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (18 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (38 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.xTaskGetHandle), (172 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetHandle), (8 bytes).
    Removing tasks.o(.text.prvSearchForNameWithinSingleList), (84 bytes).
    Removing tasks.o(.ARM.exidx.text.prvSearchForNameWithinSingleList), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (196 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (62 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskGetIdleTaskHandle), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle), (8 bytes).
    Removing tasks.o(.text.xTaskGetIdleTaskHandleForCore), (58 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandleForCore), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStepTick), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (68 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.text.xTaskAbortDelay), (182 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskAbortDelay), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (134 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (238 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (58 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (10 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (158 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark2), (22 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark), (22 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandleForCore), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandleForCore), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityInherit), (190 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.text.vTaskPriorityDisinheritAfterTimeout), (206 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (26 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.text.pvTaskIncrementMutexHeldCount), (24 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (194 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (240 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (360 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (404 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (306 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (66 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (64 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.text.vTaskResetState), (124 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResetState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvGetExpectedIdleTime), (8 bytes).
    Removing tasks.o(.rodata.str1.1), (5 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (56 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (82 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommandFromTask), (102 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommandFromTask), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommandFromISR), (90 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommandFromISR), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (34 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (26 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (58 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetReloadMode), (46 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (26 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (26 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (46 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (38 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (38 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCallFromISR), (42 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCall), (70 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerResetState), (24 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerResetState), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvReloadTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).

302 unused section(s) (total 10901 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/bigflt.c                         0x00000000   Number         0  bigflt0.o ABSOLUTE
    ../clib/btod.s                           0x00000000   Number         0  btod.o ABSOLUTE
    ../clib/btod_accurate.c                  0x00000000   Number         0  btod_accurate.o ABSOLUTE
    ../clib/btod_accurate.c                  0x00000000   Number         0  btod_accurate_common.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/locale.s                         0x00000000   Number         0  lc_numeric_c.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  lludiv10.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  strcmpv7em.o ABSOLUTE
    ../clib/misc.s                           0x00000000   Number         0  printf_stubs.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __2snprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  noretval__2snprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_intcommon.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_dec_accurate.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_common.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _sputc.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _snputc.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_infnan.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_nopercent.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_d.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_u.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_f.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent_end.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/dretinf.s                       0x00000000   Number         0  dretinf.o ABSOLUTE
    ../fplib/f2d.s                           0x00000000   Number         0  f2d.o ABSOLUTE
    ../fplib/fcmp.s                          0x00000000   Number         0  fcmp.o ABSOLUTE
    ../fplib/fcmpi.s                         0x00000000   Number         0  fcmpi.o ABSOLUTE
    ../fplib/fdiv.s                          0x00000000   Number         0  fdiv.o ABSOLUTE
    ../fplib/feqf.s                          0x00000000   Number         0  feqf.o ABSOLUTE
    ../fplib/fflt.s                          0x00000000   Number         0  fflt_clz.o ABSOLUTE
    ../fplib/fgeqf.s                         0x00000000   Number         0  fgeqf.o ABSOLUTE
    ../fplib/fleqf.s                         0x00000000   Number         0  fleqf.o ABSOLUTE
    ../fplib/fmul.s                          0x00000000   Number         0  fmul.o ABSOLUTE
    ../fplib/fnaninf.s                       0x00000000   Number         0  fnaninf.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/fpinit_empty.s                  0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    ../fplib/fretinf.s                       0x00000000   Number         0  fretinf.o ABSOLUTE
    ../fplib/istatus.s                       0x00000000   Number         0  istatus.o ABSOLUTE
    ../fplib/printf1.s                       0x00000000   Number         0  printf1.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    ../mathlib/fpclassify.c                  0x00000000   Number         0  fpclassify.o ABSOLUTE
    RTE/Device/TM4C123GH6PM/startup_TM4C123.s 0x00000000   Number         0  startup_tm4c123.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    heap_2.c                                 0x00000000   Number         0  heap_2.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    system_TM4C123.c                         0x00000000   Number         0  system_tm4c123.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    RESET                                    0x00000000   Section      620  startup_tm4c123.o(RESET)
    !!!main                                  0x0000026c   Section        8  __main.o(!!!main)
    !!!scatter                               0x00000274   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x000002a8   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x000002c4   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$_printf_percent$$00000000  0x000002e0   Section        0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    .ARM.Collect$$_printf_percent$$00000003  0x000002e0   Section        6  _printf_f.o(.ARM.Collect$$_printf_percent$$00000003)
    .ARM.Collect$$_printf_percent$$00000009  0x000002e6   Section        6  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    .ARM.Collect$$_printf_percent$$0000000A  0x000002ec   Section        6  _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A)
    .ARM.Collect$$_printf_percent$$00000017  0x000002f2   Section        4  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    .ARM.Collect$$libinit$$00000000          0x000002f6   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x000002f8   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x000002f8   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x000002f8   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x000002f8   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x000002f8   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$0000000F          0x000002f8   Section        6  libinit2.o(.ARM.Collect$$libinit$$0000000F)
    .ARM.Collect$$libinit$$00000011          0x000002fe   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x000002fe   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x000002fe   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000016          0x000002fe   Section       10  libinit2.o(.ARM.Collect$$libinit$$00000016)
    .ARM.Collect$$libinit$$00000017          0x00000308   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x00000308   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x00000308   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x00000308   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x00000308   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x00000308   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x00000308   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x00000308   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x00000308   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x00000308   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x00000308   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x00000308   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x00000308   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x0000030a   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x0000030c   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x0000030c   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x0000030c   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x0000030c   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x0000030c   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x0000030c   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x0000030c   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x0000030e   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x0000030e   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x0000030e   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x00000314   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x00000314   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x00000318   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x00000318   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x00000320   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000322   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000322   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000326   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x0000032c   Section      276  startup_tm4c123.o(.text)
    .text                                    0x00000440   Section        0  noretval__2snprintf.o(.text)
    .text                                    0x00000474   Section        0  _printf_dec.o(.text)
    .text                                    0x000004ec   Section        0  __printf_wp.o(.text)
    .text                                    0x000005fa   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x00000684   Section       16  aeabi_memset4.o(.text)
    .text                                    0x00000694   Section       68  rt_memclr.o(.text)
    .text                                    0x000006d8   Section        0  heapauxi.o(.text)
    .text                                    0x000006de   Section        0  _printf_intcommon.o(.text)
    _fp_digits                               0x00000791   Thumb Code   432  _printf_fp_dec.o(.text)
    .text                                    0x00000790   Section        0  _printf_fp_dec.o(.text)
    _printf_input_char                       0x00000bad   Thumb Code    10  _printf_char_common.o(.text)
    .text                                    0x00000bac   Section        0  _printf_char_common.o(.text)
    .text                                    0x00000bdc   Section        0  _sputc.o(.text)
    .text                                    0x00000be6   Section        0  _snputc.o(.text)
    .text                                    0x00000bf6   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x00000c5a   Section       78  rt_memclr_w.o(.text)
    .text                                    0x00000ca8   Section        8  rt_locale_intlibspace.o(.text)
    .text                                    0x00000cb0   Section      138  lludiv10.o(.text)
    .text                                    0x00000d3c   Section        0  _printf_fp_infnan.o(.text)
    .text                                    0x00000dbc   Section        0  bigflt0.o(.text)
    .text                                    0x00000ea0   Section        8  libspace.o(.text)
    .text                                    0x00000ea8   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x00000ef2   Section        0  exit.o(.text)
    .text                                    0x00000f08   Section      124  strcmpv7em.o(.text)
    .text                                    0x00000f84   Section        0  sys_exit.o(.text)
    .text                                    0x00000f90   Section        2  use_no_semi.o(.text)
    .text                                    0x00000f92   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x00000f94   Section        0  main.o(.text.ADC_Init)
    [Anonymous Symbol]                       0x00001008   Section        0  main.o(.text.ADC_Read)
    [Anonymous Symbol]                       0x0000102c   Section        0  main.o(.text.ESP8266_Init)
    [Anonymous Symbol]                       0x00001098   Section        0  main.o(.text.GPIO_Init)
    [Anonymous Symbol]                       0x000010e0   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x00001120   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x00001130   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x00001150   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x00001154   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00001184   Section        0  system_tm4c123.o(.text.SystemInit)
    [Anonymous Symbol]                       0x000011e4   Section        0  main.o(.text.UART_Init)
    [Anonymous Symbol]                       0x00001264   Section        0  main.o(.text.UART_SendChar)
    [Anonymous Symbol]                       0x00001278   Section        0  main.o(.text.UART_SendString)
    [Anonymous Symbol]                       0x00001294   Section        0  tasks.o(.text.eTaskConfirmSleepModeStatus)
    [Anonymous Symbol]                       0x000012dc   Section        0  main.o(.text.main)
    prvAddCurrentTaskToDelayedList           0x000013e1   Thumb Code   212  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x000013e0   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x000014b5   Thumb Code   206  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x000014b4   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x00001585   Thumb Code    90  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x00001584   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckTasksWaitingTermination          0x000015e1   Thumb Code    78  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x000015e0   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x00001631   Thumb Code    38  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x00001630   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x00001659   Thumb Code   122  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x00001658   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvCreateIdleTasks                       0x000016d5   Thumb Code    58  tasks.o(.text.prvCreateIdleTasks)
    [Anonymous Symbol]                       0x000016d4   Section        0  tasks.o(.text.prvCreateIdleTasks)
    prvCreateTask                            0x00001711   Thumb Code    86  tasks.o(.text.prvCreateTask)
    [Anonymous Symbol]                       0x00001710   Section        0  tasks.o(.text.prvCreateTask)
    prvDeleteTCB                             0x00001769   Thumb Code    18  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x00001768   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetExpectedIdleTime                   0x0000177d   Thumb Code    72  tasks.o(.text.prvGetExpectedIdleTime)
    [Anonymous Symbol]                       0x0000177c   Section        0  tasks.o(.text.prvGetExpectedIdleTime)
    prvGetNextExpireTime                     0x000017c5   Thumb Code    32  timers.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x000017c4   Section        0  timers.o(.text.prvGetNextExpireTime)
    prvHeapInit                              0x000017e5   Thumb Code    50  heap_2.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x000017e4   Section        0  heap_2.o(.text.prvHeapInit)
    prvIdleTask                              0x00001819   Thumb Code   114  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x00001818   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseMutex                       0x0000188d   Thumb Code    32  queue.o(.text.prvInitialiseMutex)
    [Anonymous Symbol]                       0x0000188c   Section        0  queue.o(.text.prvInitialiseMutex)
    prvInitialiseNewQueue                    0x000018ad   Thumb Code    36  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x000018ac   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x000018d1   Thumb Code   150  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x000018d0   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x00001969   Thumb Code   112  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x00001968   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertTimerInActiveList               0x000019d9   Thumb Code    64  timers.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x000019d8   Section        0  timers.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x00001a19   Thumb Code    24  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x00001a18   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvIsQueueFull                           0x00001a31   Thumb Code    28  queue.o(.text.prvIsQueueFull)
    [Anonymous Symbol]                       0x00001a30   Section        0  queue.o(.text.prvIsQueueFull)
    prvNotifyQueueSetContainer               0x00001a4d   Thumb Code   156  queue.o(.text.prvNotifyQueueSetContainer)
    [Anonymous Symbol]                       0x00001a4c   Section        0  queue.o(.text.prvNotifyQueueSetContainer)
    prvPortStartFirstTask                    0x00001ae9   Thumb Code    32  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x00001ae8   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x00001b09   Thumb Code    62  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x00001b08   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x00001b49   Thumb Code   282  timers.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x00001b48   Section        0  timers.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x00001c65   Thumb Code   128  timers.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x00001c64   Section        0  timers.o(.text.prvProcessTimerOrBlockTask)
    prvReloadTimer                           0x00001ce5   Thumb Code    58  timers.o(.text.prvReloadTimer)
    [Anonymous Symbol]                       0x00001ce4   Section        0  timers.o(.text.prvReloadTimer)
    prvResetNextTaskUnblockTime              0x00001d21   Thumb Code    38  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x00001d20   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x00001d49   Thumb Code    42  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x00001d48   Section        0  timers.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x00001d75   Thumb Code    52  timers.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x00001d74   Section        0  timers.o(.text.prvSwitchTimerLists)
    prvTaskExitError                         0x00001da9   Thumb Code    50  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x00001da8   Section        0  port.o(.text.prvTaskExitError)
    prvTimerTask                             0x00001ddd   Thumb Code    22  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x00001ddc   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x00001df5   Thumb Code   134  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00001df4   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00001e7c   Section        0  heap_2.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x00001f6c   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x00001f8c   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x00001fb4   Section        0  tasks.o(.text.uxTaskGetNumberOfTasks)
    [Anonymous Symbol]                       0x00001fc0   Section        0  main.o(.text.vCommunicationTask)
    [Anonymous Symbol]                       0x00002080   Section        0  main.o(.text.vDisplayTask)
    [Anonymous Symbol]                       0x000020e0   Section        0  main.o(.text.vHeartRateTask)
    [Anonymous Symbol]                       0x00002140   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x00002158   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x00002160   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x0000219c   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x000021e4   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x00002214   Section        0  heap_2.o(.text.vPortFree)
    [Anonymous Symbol]                       0x00002294   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x000022f8   Section        0  port.o(.text.vPortSuppressTicksAndSleep)
    [Anonymous Symbol]                       0x00002410   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x00002454   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x000024ac   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x000024c8   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x000024d8   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x0000250c   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x00002574   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x000025e4   Section        0  tasks.o(.text.vTaskStepTick)
    [Anonymous Symbol]                       0x00002674   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x00002684   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00002684   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00002710   Section        0  main.o(.text.vTemperatureTask)
    [Anonymous Symbol]                       0x00002770   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x000028a8   Section        0  queue.o(.text.xQueueCreateMutex)
    [Anonymous Symbol]                       0x000028c0   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x00002914   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x000029c0   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x00002b90   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x00002d10   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x00002db8   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x00002ddc   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x00002e04   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x00002e10   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x00002fc0   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x00003084   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x0000317c   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x000032f0   Section        0  timers.o(.text.xTimerCreateTimerTask)
    CL$$btod_d2e                             0x00003350   Section       62  btod.o(CL$$btod_d2e)
    CL$$btod_d2e_denorm_low                  0x0000338e   Section       70  btod.o(CL$$btod_d2e_denorm_low)
    CL$$btod_d2e_norm_op1                    0x000033d4   Section       96  btod.o(CL$$btod_d2e_norm_op1)
    CL$$btod_div_common                      0x00003434   Section      824  btod.o(CL$$btod_div_common)
    CL$$btod_e2e                             0x0000376c   Section      220  btod.o(CL$$btod_e2e)
    CL$$btod_ediv                            0x00003848   Section       42  btod.o(CL$$btod_ediv)
    CL$$btod_emul                            0x00003872   Section       42  btod.o(CL$$btod_emul)
    CL$$btod_mult_common                     0x0000389c   Section      580  btod.o(CL$$btod_mult_common)
    i.__ARM_fpclassify                       0x00003ae0   Section        0  fpclassify.o(i.__ARM_fpclassify)
    i._is_digit                              0x00003b08   Section        0  __printf_wp.o(i._is_digit)
    locale$$code                             0x00003b18   Section       44  lc_numeric_c.o(locale$$code)
    x$fpl$dretinf                            0x00003b44   Section       12  dretinf.o(x$fpl$dretinf)
    x$fpl$f2d                                0x00003b50   Section       86  f2d.o(x$fpl$f2d)
    x$fpl$fcmp                               0x00003ba6   Section       84  fcmp.o(x$fpl$fcmp)
    x$fpl$fcmpinf                            0x00003bfa   Section       24  fcmpi.o(x$fpl$fcmpinf)
    _fdiv1                                   0x00003c15   Thumb Code     0  fdiv.o(x$fpl$fdiv)
    x$fpl$fdiv                               0x00003c14   Section      388  fdiv.o(x$fpl$fdiv)
    x$fpl$feqf                               0x00003d98   Section      104  feqf.o(x$fpl$feqf)
    x$fpl$ffltu                              0x00003e00   Section       38  fflt_clz.o(x$fpl$ffltu)
    x$fpl$fgeqf                              0x00003e28   Section      104  fgeqf.o(x$fpl$fgeqf)
    x$fpl$fleqf                              0x00003e90   Section      104  fleqf.o(x$fpl$fleqf)
    x$fpl$fmul                               0x00003ef8   Section      258  fmul.o(x$fpl$fmul)
    x$fpl$fnaninf                            0x00003ffa   Section      140  fnaninf.o(x$fpl$fnaninf)
    x$fpl$fretinf                            0x00004086   Section       10  fretinf.o(x$fpl$fretinf)
    x$fpl$printf1                            0x00004090   Section        4  printf1.o(x$fpl$printf1)
    tenpwrs_x                                0x00004094   Data          60  bigflt0.o(.constdata)
    .constdata                               0x00004094   Section      148  bigflt0.o(.constdata)
    x$fpl$usenofp                            0x00004094   Section        0  usenofp.o(x$fpl$usenofp)
    tenpwrs_i                                0x000040d0   Data          64  bigflt0.o(.constdata)
    uxTopUsedPriority                        0x00004128   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    [Anonymous Symbol]                       0x00004128   Section        0  tasks.o(.rodata.uxTopUsedPriority)
    locale$$data                             0x0000414c   Section       28  lc_numeric_c.o(locale$$data)
    __lcnum_c_name                           0x00004150   Data           2  lc_numeric_c.o(locale$$data)
    __lcnum_c_start                          0x00004158   Data           0  lc_numeric_c.o(locale$$data)
    __lcnum_c_point                          0x00004164   Data           0  lc_numeric_c.o(locale$$data)
    __lcnum_c_thousands                      0x00004166   Data           0  lc_numeric_c.o(locale$$data)
    __lcnum_c_grouping                       0x00004167   Data           0  lc_numeric_c.o(locale$$data)
    __lcnum_c_end                            0x00004168   Data           0  lc_numeric_c.o(locale$$data)
    uxCriticalNesting                        0x20000004   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000004   Section        0  port.o(.data.uxCriticalNesting)
    xFreeBytesRemaining                      0x20000008   Data           4  heap_2.o(.data.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x20000008   Section        0  heap_2.o(.data.xFreeBytesRemaining)
    .bss                                     0x20000010   Section       96  libspace.o(.bss)
    prvSampleTimeNow.xLastTime               0x20000070   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x20000070   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    __tagsym$$used.1                         0x20000074   Number         0  tasks.o(.bss.pxCurrentTCB)
    pxCurrentTimerList                       0x20000078   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x20000078   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x2000007c   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x2000007c   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxOverflowDelayedTaskList                0x20000080   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x20000080   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x20000084   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x20000084   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x20000088   Data         400  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x20000088   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x20000218   Data       30000  heap_2.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000218   Section        0  heap_2.o(.bss.ucHeap)
    ucMaxSysCallPriority                     0x20007748   Data           1  port.o(.bss.ucMaxSysCallPriority)
    [Anonymous Symbol]                       0x20007748   Section        0  port.o(.bss.ucMaxSysCallPriority)
    ulMaxPRIGROUPValue                       0x2000774c   Data           4  port.o(.bss.ulMaxPRIGROUPValue)
    [Anonymous Symbol]                       0x2000774c   Section        0  port.o(.bss.ulMaxPRIGROUPValue)
    ulStoppedTimerCompensation               0x20007750   Data           1  port.o(.bss.ulStoppedTimerCompensation)
    [Anonymous Symbol]                       0x20007750   Section        0  port.o(.bss.ulStoppedTimerCompensation)
    ulTimerCountsForOneTick                  0x20007754   Data           4  port.o(.bss.ulTimerCountsForOneTick)
    [Anonymous Symbol]                       0x20007754   Section        0  port.o(.bss.ulTimerCountsForOneTick)
    uxCurrentNumberOfTasks                   0x20007758   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20007758   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x2000775c   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x2000775c   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x20007760   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x20007760   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x20007764   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x20007764   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20007768   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20007768   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xActiveTimerList1                        0x2000776c   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x2000776c   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x20007780   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x20007780   Section        0  timers.o(.bss.xActiveTimerList2)
    xDelayedTaskList1                        0x2000779c   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x2000779c   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x200077b0   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x200077b0   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xEnd                                     0x200077c8   Data           8  heap_2.o(.bss.xEnd)
    [Anonymous Symbol]                       0x200077c8   Section        0  heap_2.o(.bss.xEnd)
    xHeapHasBeenInitialised                  0x200077d0   Data           1  heap_2.o(.bss.xHeapHasBeenInitialised)
    [Anonymous Symbol]                       0x200077d0   Section        0  heap_2.o(.bss.xHeapHasBeenInitialised)
    xIdleTaskHandles                         0x200077dc   Data           4  tasks.o(.bss.xIdleTaskHandles)
    [Anonymous Symbol]                       0x200077dc   Section        0  tasks.o(.bss.xIdleTaskHandles)
    xMaximumPossibleSuppressedTicks          0x200077e0   Data           4  port.o(.bss.xMaximumPossibleSuppressedTicks)
    [Anonymous Symbol]                       0x200077e0   Section        0  port.o(.bss.xMaximumPossibleSuppressedTicks)
    xNextTaskUnblockTime                     0x200077e4   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x200077e4   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x200077e8   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x200077e8   Section        0  tasks.o(.bss.xNumOfOverflows)
    xPendedTicks                             0x200077ec   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x200077ec   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x200077f0   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x200077f0   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20007804   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20007804   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x2000780c   Data           8  heap_2.o(.bss.xStart)
    [Anonymous Symbol]                       0x2000780c   Section        0  heap_2.o(.bss.xStart)
    xSuspendedTaskList                       0x20007814   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20007814   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20007828   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20007828   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20007840   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20007840   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x20007844   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x20007844   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x20007848   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x20007848   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPendings                           0x2000784c   Data           4  tasks.o(.bss.xYieldPendings)
    [Anonymous Symbol]                       0x2000784c   Section        0  tasks.o(.bss.xYieldPendings)
    Heap_Mem                                 0x20007850   Data           0  startup_tm4c123.o(HEAP)
    Stack_Mem                                0x20007850   Data         512  startup_tm4c123.o(STACK)
    HEAP                                     0x20007850   Section        0  startup_tm4c123.o(HEAP)
    STACK                                    0x20007850   Section      512  startup_tm4c123.o(STACK)
    __initial_sp                             0x20007a50   Data           0  startup_tm4c123.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$IEEEJ$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_tm4c123.o(RESET)
    __fp_init_empty                          0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  printf_stubs.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _printf_post_padding                      - Undefined Weak Reference
    _printf_pre_padding                       - Undefined Weak Reference
    _printf_truncate_signed                   - Undefined Weak Reference
    _printf_truncate_unsigned                 - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_End                            0x0000026c   Data           0  startup_tm4c123.o(RESET)
    __Vectors_Size                           0x0000026c   Number         0  startup_tm4c123.o ABSOLUTE
    __main                                   0x0000026d   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x00000275   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x00000283   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x000002a9   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x000002c5   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    _printf_f                                0x000002e1   Thumb Code     0  _printf_f.o(.ARM.Collect$$_printf_percent$$00000003)
    _printf_percent                          0x000002e1   Thumb Code     0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    _printf_d                                0x000002e7   Thumb Code     0  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    _printf_u                                0x000002ed   Thumb Code     0  _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A)
    _printf_percent_end                      0x000002f3   Thumb Code     0  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    __rt_lib_init                            0x000002f7   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x000002f9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_heap_1                     0x000002f9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_common                  0x000002f9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000F)
    __rt_lib_init_preinit_1                  0x000002f9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x000002f9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_user_alloc_1               0x000002f9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x000002ff   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x000002ff   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x000002ff   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_2               0x000002ff   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000016)
    __rt_lib_init_alloca_1                   0x00000309   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x00000309   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x00000309   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x00000309   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x00000309   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x00000309   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_trap_1                  0x00000309   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x00000309   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_lc_numeric_1               0x00000309   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x00000309   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_return                     0x00000309   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x00000309   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x00000309   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_shutdown                        0x0000030b   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x0000030d   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x0000030d   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x0000030d   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x0000030d   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x0000030d   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x0000030d   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x0000030d   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x0000030f   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x0000030f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x0000030f   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x00000315   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x00000315   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x00000319   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x00000319   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x00000321   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000323   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000323   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000327   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x0000032d   Thumb Code     8  startup_tm4c123.o(.text)
    NMI_Handler                              0x00000335   Thumb Code     2  startup_tm4c123.o(.text)
    HardFault_Handler                        0x00000337   Thumb Code     2  startup_tm4c123.o(.text)
    MemManage_Handler                        0x00000339   Thumb Code     2  startup_tm4c123.o(.text)
    BusFault_Handler                         0x0000033b   Thumb Code     2  startup_tm4c123.o(.text)
    UsageFault_Handler                       0x0000033d   Thumb Code     2  startup_tm4c123.o(.text)
    DebugMon_Handler                         0x00000341   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOA_Handler                            0x00000347   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOB_Handler                            0x00000349   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOC_Handler                            0x0000034b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOD_Handler                            0x0000034d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOE_Handler                            0x0000034f   Thumb Code     2  startup_tm4c123.o(.text)
    UART0_Handler                            0x00000351   Thumb Code     2  startup_tm4c123.o(.text)
    UART1_Handler                            0x00000353   Thumb Code     2  startup_tm4c123.o(.text)
    SSI0_Handler                             0x00000355   Thumb Code     2  startup_tm4c123.o(.text)
    I2C0_Handler                             0x00000357   Thumb Code     2  startup_tm4c123.o(.text)
    PMW0_FAULT_Handler                       0x00000359   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_0_Handler                           0x0000035b   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_1_Handler                           0x0000035d   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_2_Handler                           0x0000035f   Thumb Code     2  startup_tm4c123.o(.text)
    QEI0_Handler                             0x00000361   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS0_Handler                          0x00000363   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS1_Handler                          0x00000365   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS2_Handler                          0x00000367   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS3_Handler                          0x00000369   Thumb Code     2  startup_tm4c123.o(.text)
    WDT0_Handler                             0x0000036b   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0A_Handler                          0x0000036d   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0B_Handler                          0x0000036f   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1A_Handler                          0x00000371   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1B_Handler                          0x00000373   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2A_Handler                          0x00000375   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2B_Handler                          0x00000377   Thumb Code     2  startup_tm4c123.o(.text)
    COMP0_Handler                            0x00000379   Thumb Code     2  startup_tm4c123.o(.text)
    COMP1_Handler                            0x0000037b   Thumb Code     2  startup_tm4c123.o(.text)
    COMP2_Handler                            0x0000037d   Thumb Code     2  startup_tm4c123.o(.text)
    SYSCTL_Handler                           0x0000037f   Thumb Code     2  startup_tm4c123.o(.text)
    FLASH_Handler                            0x00000381   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOF_Handler                            0x00000383   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOG_Handler                            0x00000385   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOH_Handler                            0x00000387   Thumb Code     2  startup_tm4c123.o(.text)
    UART2_Handler                            0x00000389   Thumb Code     2  startup_tm4c123.o(.text)
    SSI1_Handler                             0x0000038b   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3A_Handler                          0x0000038d   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3B_Handler                          0x0000038f   Thumb Code     2  startup_tm4c123.o(.text)
    I2C1_Handler                             0x00000391   Thumb Code     2  startup_tm4c123.o(.text)
    QEI1_Handler                             0x00000393   Thumb Code     2  startup_tm4c123.o(.text)
    CAN0_Handler                             0x00000395   Thumb Code     2  startup_tm4c123.o(.text)
    CAN1_Handler                             0x00000397   Thumb Code     2  startup_tm4c123.o(.text)
    CAN2_Handler                             0x00000399   Thumb Code     2  startup_tm4c123.o(.text)
    HIB_Handler                              0x0000039b   Thumb Code     2  startup_tm4c123.o(.text)
    USB0_Handler                             0x0000039d   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_3_Handler                           0x0000039f   Thumb Code     2  startup_tm4c123.o(.text)
    UDMA_Handler                             0x000003a1   Thumb Code     2  startup_tm4c123.o(.text)
    UDMAERR_Handler                          0x000003a3   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS0_Handler                          0x000003a5   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS1_Handler                          0x000003a7   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS2_Handler                          0x000003a9   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS3_Handler                          0x000003ab   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOJ_Handler                            0x000003ad   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOK_Handler                            0x000003af   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOL_Handler                            0x000003b1   Thumb Code     2  startup_tm4c123.o(.text)
    SSI2_Handler                             0x000003b3   Thumb Code     2  startup_tm4c123.o(.text)
    SSI3_Handler                             0x000003b5   Thumb Code     2  startup_tm4c123.o(.text)
    UART3_Handler                            0x000003b7   Thumb Code     2  startup_tm4c123.o(.text)
    UART4_Handler                            0x000003b9   Thumb Code     2  startup_tm4c123.o(.text)
    UART5_Handler                            0x000003bb   Thumb Code     2  startup_tm4c123.o(.text)
    UART6_Handler                            0x000003bd   Thumb Code     2  startup_tm4c123.o(.text)
    UART7_Handler                            0x000003bf   Thumb Code     2  startup_tm4c123.o(.text)
    I2C2_Handler                             0x000003c1   Thumb Code     2  startup_tm4c123.o(.text)
    I2C3_Handler                             0x000003c3   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4A_Handler                          0x000003c5   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4B_Handler                          0x000003c7   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5A_Handler                          0x000003c9   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5B_Handler                          0x000003cb   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0A_Handler                         0x000003cd   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0B_Handler                         0x000003cf   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1A_Handler                         0x000003d1   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1B_Handler                         0x000003d3   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2A_Handler                         0x000003d5   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2B_Handler                         0x000003d7   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3A_Handler                         0x000003d9   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3B_Handler                         0x000003db   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4A_Handler                         0x000003dd   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4B_Handler                         0x000003df   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5A_Handler                         0x000003e1   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5B_Handler                         0x000003e3   Thumb Code     2  startup_tm4c123.o(.text)
    FPU_Handler                              0x000003e5   Thumb Code     2  startup_tm4c123.o(.text)
    I2C4_Handler                             0x000003e7   Thumb Code     2  startup_tm4c123.o(.text)
    I2C5_Handler                             0x000003e9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOM_Handler                            0x000003eb   Thumb Code     2  startup_tm4c123.o(.text)
    GPION_Handler                            0x000003ed   Thumb Code     2  startup_tm4c123.o(.text)
    QEI2_Handler                             0x000003ef   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP0_Handler                           0x000003f1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP1_Handler                           0x000003f3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP2_Handler                           0x000003f5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP3_Handler                           0x000003f7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP4_Handler                           0x000003f9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP5_Handler                           0x000003fb   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP6_Handler                           0x000003fd   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP7_Handler                           0x000003ff   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ0_Handler                           0x00000401   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ1_Handler                           0x00000403   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ2_Handler                           0x00000405   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ3_Handler                           0x00000407   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ4_Handler                           0x00000409   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ5_Handler                           0x0000040b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ6_Handler                           0x0000040d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ7_Handler                           0x0000040f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOR_Handler                            0x00000411   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOS_Handler                            0x00000413   Thumb Code     2  startup_tm4c123.o(.text)
    PMW1_0_Handler                           0x00000415   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_1_Handler                           0x00000417   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_2_Handler                           0x00000419   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_3_Handler                           0x0000041b   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_FAULT_Handler                       0x0000041d   Thumb Code     2  startup_tm4c123.o(.text)
    __user_initial_stackheap                 0x00000421   Thumb Code     0  startup_tm4c123.o(.text)
    __2snprintf                              0x00000441   Thumb Code    48  noretval__2snprintf.o(.text)
    _printf_int_dec                          0x00000475   Thumb Code   104  _printf_dec.o(.text)
    __printf                                 0x000004ed   Thumb Code   270  __printf_wp.o(.text)
    __aeabi_memcpy                           0x000005fb   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x000005fb   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x00000661   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x00000685   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x00000685   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr                           0x00000695   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x00000695   Thumb Code    68  rt_memclr.o(.text)
    _memset                                  0x00000699   Thumb Code     0  rt_memclr.o(.text)
    __use_two_region_memory                  0x000006d9   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x000006db   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x000006dd   Thumb Code     2  heapauxi.o(.text)
    _printf_int_common                       0x000006df   Thumb Code   178  _printf_intcommon.o(.text)
    _printf_fp_dec_real                      0x00000941   Thumb Code   620  _printf_fp_dec.o(.text)
    _printf_char_common                      0x00000bb7   Thumb Code    32  _printf_char_common.o(.text)
    _sputc                                   0x00000bdd   Thumb Code    10  _sputc.o(.text)
    _snputc                                  0x00000be7   Thumb Code    16  _snputc.o(.text)
    __aeabi_memcpy4                          0x00000bf7   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x00000bf7   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x00000bf7   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x00000c3f   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memclr4                          0x00000c5b   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x00000c5b   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x00000c5b   Thumb Code    78  rt_memclr_w.o(.text)
    _memset_w                                0x00000c5f   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_locale                              0x00000ca9   Thumb Code     8  rt_locale_intlibspace.o(.text)
    _ll_udiv10                               0x00000cb1   Thumb Code   138  lludiv10.o(.text)
    _printf_fp_infnan                        0x00000d3d   Thumb Code   112  _printf_fp_infnan.o(.text)
    _btod_etento                             0x00000dbd   Thumb Code   224  bigflt0.o(.text)
    __user_libspace                          0x00000ea1   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x00000ea1   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x00000ea1   Thumb Code     0  libspace.o(.text)
    __user_setup_stackheap                   0x00000ea9   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x00000ef3   Thumb Code    18  exit.o(.text)
    strcmp                                   0x00000f09   Thumb Code   124  strcmpv7em.o(.text)
    _sys_exit                                0x00000f85   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x00000f91   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x00000f91   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x00000f93   Thumb Code     0  indicate_semi.o(.text)
    ADC_Init                                 0x00000f95   Thumb Code   116  main.o(.text.ADC_Init)
    ADC_Read                                 0x00001009   Thumb Code    36  main.o(.text.ADC_Read)
    ESP8266_Init                             0x0000102d   Thumb Code   108  main.o(.text.ESP8266_Init)
    GPIO_Init                                0x00001099   Thumb Code    58  main.o(.text.GPIO_Init)
    PendSV_Handler                           0x000010e1   Thumb Code    68  port.o(.text.PendSV_Handler)
    SVC_Handler                              0x00001131   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x00001155   Thumb Code    46  port.o(.text.SysTick_Handler)
    SystemInit                               0x00001185   Thumb Code    96  system_tm4c123.o(.text.SystemInit)
    UART_Init                                0x000011e5   Thumb Code   128  main.o(.text.UART_Init)
    UART_SendChar                            0x00001265   Thumb Code    18  main.o(.text.UART_SendChar)
    UART_SendString                          0x00001279   Thumb Code    28  main.o(.text.UART_SendString)
    eTaskConfirmSleepModeStatus              0x00001295   Thumb Code    72  tasks.o(.text.eTaskConfirmSleepModeStatus)
    main                                     0x000012dd   Thumb Code   260  main.o(.text.main)
    pvPortMalloc                             0x00001e7d   Thumb Code   240  heap_2.o(.text.pvPortMalloc)
    pxPortInitialiseStack                    0x00001f6d   Thumb Code    32  port.o(.text.pxPortInitialiseStack)
    uxListRemove                             0x00001f8d   Thumb Code    38  list.o(.text.uxListRemove)
    uxTaskGetNumberOfTasks                   0x00001fb5   Thumb Code    12  tasks.o(.text.uxTaskGetNumberOfTasks)
    vCommunicationTask                       0x00001fc1   Thumb Code   192  main.o(.text.vCommunicationTask)
    vDisplayTask                             0x00002081   Thumb Code    96  main.o(.text.vDisplayTask)
    vHeartRateTask                           0x000020e1   Thumb Code    94  main.o(.text.vHeartRateTask)
    vListInitialise                          0x00002141   Thumb Code    22  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x00002159   Thumb Code     6  list.o(.text.vListInitialiseItem)
    vListInsert                              0x00002161   Thumb Code    58  list.o(.text.vListInsert)
    vPortEnterCritical                       0x0000219d   Thumb Code    70  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x000021e5   Thumb Code    46  port.o(.text.vPortExitCritical)
    vPortFree                                0x00002215   Thumb Code   126  heap_2.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x00002295   Thumb Code   100  port.o(.text.vPortSetupTimerInterrupt)
    vPortSuppressTicksAndSleep               0x000022f9   Thumb Code   280  port.o(.text.vPortSuppressTicksAndSleep)
    vQueueWaitForMessageRestricted           0x00002411   Thumb Code    68  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskDelay                               0x00002455   Thumb Code    86  tasks.o(.text.vTaskDelay)
    vTaskInternalSetTimeOutState             0x000024ad   Thumb Code    26  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x000024c9   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x000024d9   Thumb Code    50  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x0000250d   Thumb Code   102  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskStartScheduler                      0x00002575   Thumb Code   110  tasks.o(.text.vTaskStartScheduler)
    vTaskStepTick                            0x000025e5   Thumb Code   142  tasks.o(.text.vTaskStepTick)
    vTaskSuspendAll                          0x00002675   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x00002685   Thumb Code   138  tasks.o(.text.vTaskSwitchContext)
    vTemperatureTask                         0x00002711   Thumb Code    96  main.o(.text.vTemperatureTask)
    xPortStartScheduler                      0x00002771   Thumb Code   310  port.o(.text.xPortStartScheduler)
    xQueueCreateMutex                        0x000028a9   Thumb Code    22  queue.o(.text.xQueueCreateMutex)
    xQueueGenericCreate                      0x000028c1   Thumb Code    82  queue.o(.text.xQueueGenericCreate)
    xQueueGenericReset                       0x00002915   Thumb Code   170  queue.o(.text.xQueueGenericReset)
    xQueueGenericSend                        0x000029c1   Thumb Code   464  queue.o(.text.xQueueGenericSend)
    xQueueReceive                            0x00002b91   Thumb Code   384  queue.o(.text.xQueueReceive)
    xTaskCheckForTimeOut                     0x00002d11   Thumb Code   166  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x00002db9   Thumb Code    36  tasks.o(.text.xTaskCreate)
    xTaskGetSchedulerState                   0x00002ddd   Thumb Code    38  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x00002e05   Thumb Code    12  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x00002e11   Thumb Code   430  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x00002fc1   Thumb Code   194  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskRemoveFromEventList                 0x00003085   Thumb Code   248  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x0000317d   Thumb Code   372  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x000032f1   Thumb Code    96  timers.o(.text.xTimerCreateTimerTask)
    _btod_d2e                                0x00003351   Thumb Code    62  btod.o(CL$$btod_d2e)
    _d2e_denorm_low                          0x0000338f   Thumb Code    70  btod.o(CL$$btod_d2e_denorm_low)
    _d2e_norm_op1                            0x000033d5   Thumb Code    96  btod.o(CL$$btod_d2e_norm_op1)
    __btod_div_common                        0x00003435   Thumb Code   696  btod.o(CL$$btod_div_common)
    _e2e                                     0x0000376d   Thumb Code   220  btod.o(CL$$btod_e2e)
    _btod_ediv                               0x00003849   Thumb Code    42  btod.o(CL$$btod_ediv)
    _btod_emul                               0x00003873   Thumb Code    42  btod.o(CL$$btod_emul)
    __btod_mult_common                       0x0000389d   Thumb Code   580  btod.o(CL$$btod_mult_common)
    __ARM_fpclassify                         0x00003ae1   Thumb Code    40  fpclassify.o(i.__ARM_fpclassify)
    _is_digit                                0x00003b09   Thumb Code    14  __printf_wp.o(i._is_digit)
    _get_lc_numeric                          0x00003b19   Thumb Code    44  lc_numeric_c.o(locale$$code)
    __fpl_dretinf                            0x00003b45   Thumb Code    12  dretinf.o(x$fpl$dretinf)
    __aeabi_f2d                              0x00003b51   Thumb Code     0  f2d.o(x$fpl$f2d)
    _f2d                                     0x00003b51   Thumb Code    86  f2d.o(x$fpl$f2d)
    __aeabi_fcmpeq                           0x00003ba7   Thumb Code     0  fcmp.o(x$fpl$fcmp)
    _feq                                     0x00003ba7   Thumb Code    14  fcmp.o(x$fpl$fcmp)
    _fneq                                    0x00003bb5   Thumb Code    14  fcmp.o(x$fpl$fcmp)
    __aeabi_fcmpgt                           0x00003bc3   Thumb Code     0  fcmp.o(x$fpl$fcmp)
    _fgr                                     0x00003bc3   Thumb Code    14  fcmp.o(x$fpl$fcmp)
    __aeabi_fcmpge                           0x00003bd1   Thumb Code     0  fcmp.o(x$fpl$fcmp)
    _fgeq                                    0x00003bd1   Thumb Code    14  fcmp.o(x$fpl$fcmp)
    __aeabi_fcmple                           0x00003bdf   Thumb Code     0  fcmp.o(x$fpl$fcmp)
    _fleq                                    0x00003bdf   Thumb Code    14  fcmp.o(x$fpl$fcmp)
    __aeabi_fcmplt                           0x00003bed   Thumb Code     0  fcmp.o(x$fpl$fcmp)
    _fls                                     0x00003bed   Thumb Code    14  fcmp.o(x$fpl$fcmp)
    __fpl_fcmp_Inf                           0x00003bfb   Thumb Code    24  fcmpi.o(x$fpl$fcmpinf)
    __aeabi_fdiv                             0x00003c15   Thumb Code     0  fdiv.o(x$fpl$fdiv)
    _fdiv                                    0x00003c15   Thumb Code   384  fdiv.o(x$fpl$fdiv)
    __aeabi_cfcmpeq                          0x00003d99   Thumb Code     0  feqf.o(x$fpl$feqf)
    _fcmpeq                                  0x00003d99   Thumb Code   104  feqf.o(x$fpl$feqf)
    __aeabi_ui2f                             0x00003e01   Thumb Code     0  fflt_clz.o(x$fpl$ffltu)
    _ffltu                                   0x00003e01   Thumb Code    38  fflt_clz.o(x$fpl$ffltu)
    _fcmpge                                  0x00003e29   Thumb Code   104  fgeqf.o(x$fpl$fgeqf)
    __aeabi_cfcmple                          0x00003e91   Thumb Code     0  fleqf.o(x$fpl$fleqf)
    _fcmple                                  0x00003e91   Thumb Code   104  fleqf.o(x$fpl$fleqf)
    __fpl_fcmple_InfNaN                      0x00003ee3   Thumb Code     0  fleqf.o(x$fpl$fleqf)
    __aeabi_fmul                             0x00003ef9   Thumb Code     0  fmul.o(x$fpl$fmul)
    _fmul                                    0x00003ef9   Thumb Code   258  fmul.o(x$fpl$fmul)
    __fpl_fnaninf                            0x00003ffb   Thumb Code   140  fnaninf.o(x$fpl$fnaninf)
    __fpl_fretinf                            0x00004087   Thumb Code    10  fretinf.o(x$fpl$fretinf)
    _printf_fp_dec                           0x00004091   Thumb Code     4  printf1.o(x$fpl$printf1)
    __I$use$fp                               0x00004094   Number         0  usenofp.o(x$fpl$usenofp)
    Region$$Table$$Base                      0x0000412c   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x0000414c   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_tm4c123.o(.data.SystemCoreClock)
    __libspace_start                         0x20000010   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20000070   Data           0  libspace.o(.bss)
    pxCurrentTCB                             0x20000074   Data           4  tasks.o(.bss.pxCurrentTCB)
    xCommQueue                               0x20007794   Data           4  main.o(.bss.xCommQueue)
    xCommTaskHandle                          0x20007798   Data           4  main.o(.bss.xCommTaskHandle)
    xDisplayTaskHandle                       0x200077c4   Data           4  main.o(.bss.xDisplayTaskHandle)
    xHeartRateTaskHandle                     0x200077d4   Data           4  main.o(.bss.xHeartRateTaskHandle)
    xI2CSemaphore                            0x200077d8   Data           4  main.o(.bss.xI2CSemaphore)
    xSensorDataQueue                         0x20007808   Data           4  main.o(.bss.xSensorDataQueue)
    xTempTaskHandle                          0x2000783c   Data           4  main.o(.bss.xTempTaskHandle)



==============================================================================

Memory Map of the image

  Image Entry point : 0x0000032d

  Load Region LR_1 (Base: 0x00000000, Size: 0x00004174, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00004168, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x0000026c   Data   RO           43    RESET               startup_tm4c123.o
    0x0000026c   0x0000026c   0x00000008   Code   RO          546  * !!!main             c_w.l(__main.o)
    0x00000274   0x00000274   0x00000034   Code   RO          810    !!!scatter          c_w.l(__scatter.o)
    0x000002a8   0x000002a8   0x0000001a   Code   RO          812    !!handler_copy      c_w.l(__scatter_copy.o)
    0x000002c2   0x000002c2   0x00000002   PAD
    0x000002c4   0x000002c4   0x0000001c   Code   RO          814    !!handler_zi        c_w.l(__scatter_zi.o)
    0x000002e0   0x000002e0   0x00000000   Code   RO          535    .ARM.Collect$$_printf_percent$$00000000  c_w.l(_printf_percent.o)
    0x000002e0   0x000002e0   0x00000006   Code   RO          534    .ARM.Collect$$_printf_percent$$00000003  c_w.l(_printf_f.o)
    0x000002e6   0x000002e6   0x00000006   Code   RO          532    .ARM.Collect$$_printf_percent$$00000009  c_w.l(_printf_d.o)
    0x000002ec   0x000002ec   0x00000006   Code   RO          533    .ARM.Collect$$_printf_percent$$0000000A  c_w.l(_printf_u.o)
    0x000002f2   0x000002f2   0x00000004   Code   RO          579    .ARM.Collect$$_printf_percent$$00000017  c_w.l(_printf_percent_end.o)
    0x000002f6   0x000002f6   0x00000002   Code   RO          675    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x000002f8   0x000002f8   0x00000000   Code   RO          677    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x000002f8   0x000002f8   0x00000000   Code   RO          679    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x000002f8   0x000002f8   0x00000000   Code   RO          682    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x000002f8   0x000002f8   0x00000000   Code   RO          684    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x000002f8   0x000002f8   0x00000000   Code   RO          686    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x000002f8   0x000002f8   0x00000006   Code   RO          687    .ARM.Collect$$libinit$$0000000F  c_w.l(libinit2.o)
    0x000002fe   0x000002fe   0x00000000   Code   RO          689    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x000002fe   0x000002fe   0x00000000   Code   RO          691    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x000002fe   0x000002fe   0x00000000   Code   RO          693    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x000002fe   0x000002fe   0x0000000a   Code   RO          694    .ARM.Collect$$libinit$$00000016  c_w.l(libinit2.o)
    0x00000308   0x00000308   0x00000000   Code   RO          695    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x00000308   0x00000308   0x00000000   Code   RO          697    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x00000308   0x00000308   0x00000000   Code   RO          699    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x00000308   0x00000308   0x00000000   Code   RO          701    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x00000308   0x00000308   0x00000000   Code   RO          703    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x00000308   0x00000308   0x00000000   Code   RO          705    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x00000308   0x00000308   0x00000000   Code   RO          707    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x00000308   0x00000308   0x00000000   Code   RO          709    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x00000308   0x00000308   0x00000000   Code   RO          713    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x00000308   0x00000308   0x00000000   Code   RO          715    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x00000308   0x00000308   0x00000000   Code   RO          717    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x00000308   0x00000308   0x00000000   Code   RO          719    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x00000308   0x00000308   0x00000002   Code   RO          720    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x0000030a   0x0000030a   0x00000002   Code   RO          756    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x0000030c   0x0000030c   0x00000000   Code   RO          767    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x0000030c   0x0000030c   0x00000000   Code   RO          769    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x0000030c   0x0000030c   0x00000000   Code   RO          772    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x0000030c   0x0000030c   0x00000000   Code   RO          775    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x0000030c   0x0000030c   0x00000000   Code   RO          777    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x0000030c   0x0000030c   0x00000000   Code   RO          780    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x0000030c   0x0000030c   0x00000002   Code   RO          781    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x0000030e   0x0000030e   0x00000000   Code   RO          566    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x0000030e   0x0000030e   0x00000000   Code   RO          598    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x0000030e   0x0000030e   0x00000006   Code   RO          610    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x00000314   0x00000314   0x00000000   Code   RO          600    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x00000314   0x00000314   0x00000004   Code   RO          601    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x00000318   0x00000318   0x00000000   Code   RO          603    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x00000318   0x00000318   0x00000008   Code   RO          604    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x00000320   0x00000320   0x00000002   Code   RO          721    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x00000322   0x00000322   0x00000000   Code   RO          730    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x00000322   0x00000322   0x00000004   Code   RO          731    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x00000326   0x00000326   0x00000006   Code   RO          732    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0000032c   0x0000032c   0x00000114   Code   RO           44  * .text               startup_tm4c123.o
    0x00000440   0x00000440   0x00000034   Code   RO          506    .text               c_w.l(noretval__2snprintf.o)
    0x00000474   0x00000474   0x00000078   Code   RO          510    .text               c_w.l(_printf_dec.o)
    0x000004ec   0x000004ec   0x0000010e   Code   RO          520    .text               c_w.l(__printf_wp.o)
    0x000005fa   0x000005fa   0x0000008a   Code   RO          538    .text               c_w.l(rt_memcpy_v6.o)
    0x00000684   0x00000684   0x00000010   Code   RO          540    .text               c_w.l(aeabi_memset4.o)
    0x00000694   0x00000694   0x00000044   Code   RO          542    .text               c_w.l(rt_memclr.o)
    0x000006d8   0x000006d8   0x00000006   Code   RO          544    .text               c_w.l(heapauxi.o)
    0x000006de   0x000006de   0x000000b2   Code   RO          567    .text               c_w.l(_printf_intcommon.o)
    0x00000790   0x00000790   0x0000041c   Code   RO          569    .text               c_w.l(_printf_fp_dec.o)
    0x00000bac   0x00000bac   0x00000030   Code   RO          573    .text               c_w.l(_printf_char_common.o)
    0x00000bdc   0x00000bdc   0x0000000a   Code   RO          575    .text               c_w.l(_sputc.o)
    0x00000be6   0x00000be6   0x00000010   Code   RO          577    .text               c_w.l(_snputc.o)
    0x00000bf6   0x00000bf6   0x00000064   Code   RO          580    .text               c_w.l(rt_memcpy_w.o)
    0x00000c5a   0x00000c5a   0x0000004e   Code   RO          582    .text               c_w.l(rt_memclr_w.o)
    0x00000ca8   0x00000ca8   0x00000008   Code   RO          615    .text               c_w.l(rt_locale_intlibspace.o)
    0x00000cb0   0x00000cb0   0x0000008a   Code   RO          617    .text               c_w.l(lludiv10.o)
    0x00000d3a   0x00000d3a   0x00000002   PAD
    0x00000d3c   0x00000d3c   0x00000080   Code   RO          619    .text               c_w.l(_printf_fp_infnan.o)
    0x00000dbc   0x00000dbc   0x000000e4   Code   RO          623    .text               c_w.l(bigflt0.o)
    0x00000ea0   0x00000ea0   0x00000008   Code   RO          659    .text               c_w.l(libspace.o)
    0x00000ea8   0x00000ea8   0x0000004a   Code   RO          662    .text               c_w.l(sys_stackheap_outer.o)
    0x00000ef2   0x00000ef2   0x00000012   Code   RO          666    .text               c_w.l(exit.o)
    0x00000f04   0x00000f04   0x00000004   PAD
    0x00000f08   0x00000f08   0x0000007c   Code   RO          668    .text               c_w.l(strcmpv7em.o)
    0x00000f84   0x00000f84   0x0000000c   Code   RO          742    .text               c_w.l(sys_exit.o)
    0x00000f90   0x00000f90   0x00000002   Code   RO          757    .text               c_w.l(use_no_semi.o)
    0x00000f92   0x00000f92   0x00000000   Code   RO          759    .text               c_w.l(indicate_semi.o)
    0x00000f92   0x00000f92   0x00000002   PAD
    0x00000f94   0x00000f94   0x00000074   Code   RO           10    .text.ADC_Init      main.o
    0x00001008   0x00001008   0x00000024   Code   RO           12    .text.ADC_Read      main.o
    0x0000102c   0x0000102c   0x0000006c   Code   RO           22    .text.ESP8266_Init  main.o
    0x00001098   0x00001098   0x0000003a   Code   RO            8    .text.GPIO_Init     main.o
    0x000010d2   0x000010d2   0x0000000e   PAD
    0x000010e0   0x000010e0   0x00000044   Code   RO           94    .text.PendSV_Handler  port.o
    0x00001124   0x00001124   0x0000000c   PAD
    0x00001130   0x00001130   0x00000024   Code   RO           90    .text.SVC_Handler   port.o
    0x00001154   0x00001154   0x0000002e   Code   RO          106    .text.SysTick_Handler  port.o
    0x00001182   0x00001182   0x00000002   PAD
    0x00001184   0x00001184   0x00000060   Code   RO           55    .text.SystemInit    system_tm4c123.o
    0x000011e4   0x000011e4   0x00000080   Code   RO            6    .text.UART_Init     main.o
    0x00001264   0x00001264   0x00000012   Code   RO            2    .text.UART_SendChar  main.o
    0x00001276   0x00001276   0x00000002   PAD
    0x00001278   0x00001278   0x0000001c   Code   RO            4    .text.UART_SendString  main.o
    0x00001294   0x00001294   0x00000048   Code   RO          347    .text.eTaskConfirmSleepModeStatus  tasks.o
    0x000012dc   0x000012dc   0x00000104   Code   RO           24    .text.main          main.o
    0x000013e0   0x000013e0   0x000000d4   Code   RO          261    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x000014b4   0x000014b4   0x000000ce   Code   RO          249    .text.prvAddNewTaskToReadyList  tasks.o
    0x00001582   0x00001582   0x00000002   PAD
    0x00001584   0x00001584   0x0000005a   Code   RO          430    .text.prvCheckForValidListAndQueue  timers.o
    0x000015de   0x000015de   0x00000002   PAD
    0x000015e0   0x000015e0   0x0000004e   Code   RO          295    .text.prvCheckTasksWaitingTermination  tasks.o
    0x0000162e   0x0000162e   0x00000002   PAD
    0x00001630   0x00001630   0x00000026   Code   RO          191    .text.prvCopyDataFromQueue  queue.o
    0x00001656   0x00001656   0x00000002   PAD
    0x00001658   0x00001658   0x0000007a   Code   RO          177    .text.prvCopyDataToQueue  queue.o
    0x000016d2   0x000016d2   0x00000002   PAD
    0x000016d4   0x000016d4   0x0000003a   Code   RO          291    .text.prvCreateIdleTasks  tasks.o
    0x0000170e   0x0000170e   0x00000002   PAD
    0x00001710   0x00001710   0x00000056   Code   RO          247    .text.prvCreateTask  tasks.o
    0x00001766   0x00001766   0x00000002   PAD
    0x00001768   0x00001768   0x00000012   Code   RO          255    .text.prvDeleteTCB  tasks.o
    0x0000177a   0x0000177a   0x00000002   PAD
    0x0000177c   0x0000177c   0x00000048   Code   RO          395    .text.prvGetExpectedIdleTime  tasks.o
    0x000017c4   0x000017c4   0x00000020   Code   RO          472    .text.prvGetNextExpireTime  timers.o
    0x000017e4   0x000017e4   0x00000032   Code   RO          128    .text.prvHeapInit   heap_2.o
    0x00001816   0x00001816   0x00000002   PAD
    0x00001818   0x00001818   0x00000072   Code   RO          393    .text.prvIdleTask   tasks.o
    0x0000188a   0x0000188a   0x00000002   PAD
    0x0000188c   0x0000188c   0x00000020   Code   RO          161    .text.prvInitialiseMutex  queue.o
    0x000018ac   0x000018ac   0x00000024   Code   RO          157    .text.prvInitialiseNewQueue  queue.o
    0x000018d0   0x000018d0   0x00000096   Code   RO          389    .text.prvInitialiseNewTask  tasks.o
    0x00001966   0x00001966   0x00000002   PAD
    0x00001968   0x00001968   0x00000070   Code   RO          391    .text.prvInitialiseTaskLists  tasks.o
    0x000019d8   0x000019d8   0x00000040   Code   RO          486    .text.prvInsertTimerInActiveList  timers.o
    0x00001a18   0x00001a18   0x00000018   Code   RO          193    .text.prvIsQueueEmpty  queue.o
    0x00001a30   0x00001a30   0x0000001c   Code   RO          181    .text.prvIsQueueFull  queue.o
    0x00001a4c   0x00001a4c   0x0000009c   Code   RO          179    .text.prvNotifyQueueSetContainer  queue.o
    0x00001ae8   0x00001ae8   0x00000020   Code   RO           98    .text.prvPortStartFirstTask  port.o
    0x00001b08   0x00001b08   0x0000003e   Code   RO          480    .text.prvProcessExpiredTimer  timers.o
    0x00001b46   0x00001b46   0x00000002   PAD
    0x00001b48   0x00001b48   0x0000011a   Code   RO          476    .text.prvProcessReceivedCommands  timers.o
    0x00001c62   0x00001c62   0x00000002   PAD
    0x00001c64   0x00001c64   0x00000080   Code   RO          474    .text.prvProcessTimerOrBlockTask  timers.o
    0x00001ce4   0x00001ce4   0x0000003a   Code   RO          484    .text.prvReloadTimer  timers.o
    0x00001d1e   0x00001d1e   0x00000002   PAD
    0x00001d20   0x00001d20   0x00000026   Code   RO          253    .text.prvResetNextTaskUnblockTime  tasks.o
    0x00001d46   0x00001d46   0x00000002   PAD
    0x00001d48   0x00001d48   0x0000002a   Code   RO          478    .text.prvSampleTimeNow  timers.o
    0x00001d72   0x00001d72   0x00000002   PAD
    0x00001d74   0x00001d74   0x00000034   Code   RO          482    .text.prvSwitchTimerLists  timers.o
    0x00001da8   0x00001da8   0x00000032   Code   RO           88    .text.prvTaskExitError  port.o
    0x00001dda   0x00001dda   0x00000002   PAD
    0x00001ddc   0x00001ddc   0x00000016   Code   RO          432    .text.prvTimerTask  timers.o
    0x00001df2   0x00001df2   0x00000002   PAD
    0x00001df4   0x00001df4   0x00000086   Code   RO          183    .text.prvUnlockQueue  queue.o
    0x00001e7a   0x00001e7a   0x00000002   PAD
    0x00001e7c   0x00001e7c   0x000000f0   Code   RO          126    .text.pvPortMalloc  heap_2.o
    0x00001f6c   0x00001f6c   0x00000020   Code   RO           86    .text.pxPortInitialiseStack  port.o
    0x00001f8c   0x00001f8c   0x00000026   Code   RO           76    .text.uxListRemove  list.o
    0x00001fb2   0x00001fb2   0x00000002   PAD
    0x00001fb4   0x00001fb4   0x0000000c   Code   RO          303    .text.uxTaskGetNumberOfTasks  tasks.o
    0x00001fc0   0x00001fc0   0x000000c0   Code   RO           18    .text.vCommunicationTask  main.o
    0x00002080   0x00002080   0x00000060   Code   RO           20    .text.vDisplayTask  main.o
    0x000020e0   0x000020e0   0x0000005e   Code   RO           16    .text.vHeartRateTask  main.o
    0x0000213e   0x0000213e   0x00000002   PAD
    0x00002140   0x00002140   0x00000016   Code   RO           68    .text.vListInitialise  list.o
    0x00002156   0x00002156   0x00000002   PAD
    0x00002158   0x00002158   0x00000006   Code   RO           70    .text.vListInitialiseItem  list.o
    0x0000215e   0x0000215e   0x00000002   PAD
    0x00002160   0x00002160   0x0000003a   Code   RO           74    .text.vListInsert   list.o
    0x0000219a   0x0000219a   0x00000002   PAD
    0x0000219c   0x0000219c   0x00000046   Code   RO          102    .text.vPortEnterCritical  port.o
    0x000021e2   0x000021e2   0x00000002   PAD
    0x000021e4   0x000021e4   0x0000002e   Code   RO          104    .text.vPortExitCritical  port.o
    0x00002212   0x00002212   0x00000002   PAD
    0x00002214   0x00002214   0x0000007e   Code   RO          130    .text.vPortFree     heap_2.o
    0x00002292   0x00002292   0x00000002   PAD
    0x00002294   0x00002294   0x00000064   Code   RO           96    .text.vPortSetupTimerInterrupt  port.o
    0x000022f8   0x000022f8   0x00000118   Code   RO          108    .text.vPortSuppressTicksAndSleep  port.o
    0x00002410   0x00002410   0x00000044   Code   RO          225    .text.vQueueWaitForMessageRestricted  queue.o
    0x00002454   0x00002454   0x00000056   Code   RO          265    .text.vTaskDelay    tasks.o
    0x000024aa   0x000024aa   0x00000002   PAD
    0x000024ac   0x000024ac   0x0000001a   Code   RO          337    .text.vTaskInternalSetTimeOutState  tasks.o
    0x000024c6   0x000024c6   0x00000002   PAD
    0x000024c8   0x000024c8   0x0000000e   Code   RO          341    .text.vTaskMissedYield  tasks.o
    0x000024d6   0x000024d6   0x00000002   PAD
    0x000024d8   0x000024d8   0x00000032   Code   RO          325    .text.vTaskPlaceOnEventList  tasks.o
    0x0000250a   0x0000250a   0x00000002   PAD
    0x0000250c   0x0000250c   0x00000066   Code   RO          329    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x00002572   0x00002572   0x00000002   PAD
    0x00002574   0x00002574   0x0000006e   Code   RO          289    .text.vTaskStartScheduler  tasks.o
    0x000025e2   0x000025e2   0x00000002   PAD
    0x000025e4   0x000025e4   0x0000008e   Code   RO          319    .text.vTaskStepTick  tasks.o
    0x00002672   0x00002672   0x00000002   PAD
    0x00002674   0x00002674   0x00000010   Code   RO          259    .text.vTaskSuspendAll  tasks.o
    0x00002684   0x00002684   0x0000008a   Code   RO          281    .text.vTaskSwitchContext  tasks.o
    0x0000270e   0x0000270e   0x00000002   PAD
    0x00002710   0x00002710   0x00000060   Code   RO           14    .text.vTemperatureTask  main.o
    0x00002770   0x00002770   0x00000136   Code   RO           92    .text.xPortStartScheduler  port.o
    0x000028a6   0x000028a6   0x00000002   PAD
    0x000028a8   0x000028a8   0x00000016   Code   RO          159    .text.xQueueCreateMutex  queue.o
    0x000028be   0x000028be   0x00000002   PAD
    0x000028c0   0x000028c0   0x00000052   Code   RO          155    .text.xQueueGenericCreate  queue.o
    0x00002912   0x00002912   0x00000002   PAD
    0x00002914   0x00002914   0x000000aa   Code   RO          153    .text.xQueueGenericReset  queue.o
    0x000029be   0x000029be   0x00000002   PAD
    0x000029c0   0x000029c0   0x000001d0   Code   RO          169    .text.xQueueGenericSend  queue.o
    0x00002b90   0x00002b90   0x00000180   Code   RO          189    .text.xQueueReceive  queue.o
    0x00002d10   0x00002d10   0x000000a6   Code   RO          339    .text.xTaskCheckForTimeOut  tasks.o
    0x00002db6   0x00002db6   0x00000002   PAD
    0x00002db8   0x00002db8   0x00000024   Code   RO          245    .text.xTaskCreate   tasks.o
    0x00002ddc   0x00002ddc   0x00000026   Code   RO          361    .text.xTaskGetSchedulerState  tasks.o
    0x00002e02   0x00002e02   0x00000002   PAD
    0x00002e04   0x00002e04   0x0000000c   Code   RO          299    .text.xTaskGetTickCount  tasks.o
    0x00002e10   0x00002e10   0x000001ae   Code   RO          297    .text.xTaskIncrementTick  tasks.o
    0x00002fbe   0x00002fbe   0x00000002   PAD
    0x00002fc0   0x00002fc0   0x000000c2   Code   RO          365    .text.xTaskPriorityDisinherit  tasks.o
    0x00003082   0x00003082   0x00000002   PAD
    0x00003084   0x00003084   0x000000f8   Code   RO          331    .text.xTaskRemoveFromEventList  tasks.o
    0x0000317c   0x0000317c   0x00000174   Code   RO          263    .text.xTaskResumeAll  tasks.o
    0x000032f0   0x000032f0   0x00000060   Code   RO          428    .text.xTimerCreateTimerTask  timers.o
    0x00003350   0x00003350   0x0000003e   Code   RO          626    CL$$btod_d2e        c_w.l(btod.o)
    0x0000338e   0x0000338e   0x00000046   Code   RO          628    CL$$btod_d2e_denorm_low  c_w.l(btod.o)
    0x000033d4   0x000033d4   0x00000060   Code   RO          627    CL$$btod_d2e_norm_op1  c_w.l(btod.o)
    0x00003434   0x00003434   0x00000338   Code   RO          636    CL$$btod_div_common  c_w.l(btod.o)
    0x0000376c   0x0000376c   0x000000dc   Code   RO          633    CL$$btod_e2e        c_w.l(btod.o)
    0x00003848   0x00003848   0x0000002a   Code   RO          630    CL$$btod_ediv       c_w.l(btod.o)
    0x00003872   0x00003872   0x0000002a   Code   RO          629    CL$$btod_emul       c_w.l(btod.o)
    0x0000389c   0x0000389c   0x00000244   Code   RO          635    CL$$btod_mult_common  c_w.l(btod.o)
    0x00003ae0   0x00003ae0   0x00000028   Code   RO          657    i.__ARM_fpclassify  m_ws.l(fpclassify.o)
    0x00003b08   0x00003b08   0x0000000e   Code   RO          522    i._is_digit         c_w.l(__printf_wp.o)
    0x00003b16   0x00003b16   0x00000002   PAD
    0x00003b18   0x00003b18   0x0000002c   Code   RO          651    locale$$code        c_w.l(lc_numeric_c.o)
    0x00003b44   0x00003b44   0x0000000c   Code   RO          584    x$fpl$dretinf       fz_ws.l(dretinf.o)
    0x00003b50   0x00003b50   0x00000056   Code   RO          548    x$fpl$f2d           fz_ws.l(f2d.o)
    0x00003ba6   0x00003ba6   0x00000054   Code   RO          550    x$fpl$fcmp          fz_ws.l(fcmp.o)
    0x00003bfa   0x00003bfa   0x00000018   Code   RO          653    x$fpl$fcmpinf       fz_ws.l(fcmpi.o)
    0x00003c12   0x00003c12   0x00000002   PAD
    0x00003c14   0x00003c14   0x00000184   Code   RO          553    x$fpl$fdiv          fz_ws.l(fdiv.o)
    0x00003d98   0x00003d98   0x00000068   Code   RO          586    x$fpl$feqf          fz_ws.l(feqf.o)
    0x00003e00   0x00003e00   0x00000026   Code   RO          556    x$fpl$ffltu         fz_ws.l(fflt_clz.o)
    0x00003e26   0x00003e26   0x00000002   PAD
    0x00003e28   0x00003e28   0x00000068   Code   RO          588    x$fpl$fgeqf         fz_ws.l(fgeqf.o)
    0x00003e90   0x00003e90   0x00000068   Code   RO          590    x$fpl$fleqf         fz_ws.l(fleqf.o)
    0x00003ef8   0x00003ef8   0x00000102   Code   RO          562    x$fpl$fmul          fz_ws.l(fmul.o)
    0x00003ffa   0x00003ffa   0x0000008c   Code   RO          592    x$fpl$fnaninf       fz_ws.l(fnaninf.o)
    0x00004086   0x00004086   0x0000000a   Code   RO          594    x$fpl$fretinf       fz_ws.l(fretinf.o)
    0x00004090   0x00004090   0x00000004   Code   RO          564    x$fpl$printf1       fz_ws.l(printf1.o)
    0x00004094   0x00004094   0x00000000   Code   RO          596    x$fpl$usenofp       fz_ws.l(usenofp.o)
    0x00004094   0x00004094   0x00000094   Data   RO          624    .constdata          c_w.l(bigflt0.o)
    0x00004128   0x00004128   0x00000004   Data   RO          414    .rodata.uxTopUsedPriority  tasks.o
    0x0000412c   0x0000412c   0x00000020   Data   RO          809    Region$$Table       anon$$obj.o
    0x0000414c   0x0000414c   0x0000001c   Data   RO          650    locale$$data        c_w.l(lc_numeric_c.o)


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x00004168, Size: 0x0000000c, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00004168   0x00000004   Data   RW           57    .data.SystemCoreClock  system_tm4c123.o
    0x20000004   0x0000416c   0x00000004   Data   RW          114    .data.uxCriticalNesting  port.o
    0x20000008   0x00004170   0x00000004   Data   RW          141    .data.xFreeBytesRemaining  heap_2.o


    Execution Region ER_ZI (Exec base: 0x20000010, Load base: 0x00004174, Size: 0x00007a40, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000010        -       0x00000060   Zero   RW          660    .bss                c_w.l(libspace.o)
    0x20000070        -       0x00000004   Zero   RW          492    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x20000074        -       0x00000004   Zero   RW          397    .bss.pxCurrentTCB   tasks.o
    0x20000078        -       0x00000004   Zero   RW          490    .bss.pxCurrentTimerList  timers.o
    0x2000007c        -       0x00000004   Zero   RW          407    .bss.pxDelayedTaskList  tasks.o
    0x20000080        -       0x00000004   Zero   RW          408    .bss.pxOverflowDelayedTaskList  tasks.o
    0x20000084        -       0x00000004   Zero   RW          491    .bss.pxOverflowTimerList  timers.o
    0x20000088        -       0x00000190   Zero   RW          398    .bss.pxReadyTasksLists  tasks.o
    0x20000218        -       0x00007530   Zero   RW          144    .bss.ucHeap         heap_2.o
    0x20007748        -       0x00000001   Zero   RW          112    .bss.ucMaxSysCallPriority  port.o
    0x20007749   0x00004174   0x00000003   PAD
    0x2000774c        -       0x00000004   Zero   RW          113    .bss.ulMaxPRIGROUPValue  port.o
    0x20007750        -       0x00000001   Zero   RW          117    .bss.ulStoppedTimerCompensation  port.o
    0x20007751   0x00004174   0x00000003   PAD
    0x20007754        -       0x00000004   Zero   RW          116    .bss.ulTimerCountsForOneTick  port.o
    0x20007758        -       0x00000004   Zero   RW          404    .bss.uxCurrentNumberOfTasks  tasks.o
    0x2000775c        -       0x00000004   Zero   RW          403    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x20007760        -       0x00000004   Zero   RW          405    .bss.uxSchedulerSuspended  tasks.o
    0x20007764        -       0x00000004   Zero   RW          400    .bss.uxTaskNumber   tasks.o
    0x20007768        -       0x00000004   Zero   RW          399    .bss.uxTopReadyPriority  tasks.o
    0x2000776c        -       0x00000014   Zero   RW          493    .bss.xActiveTimerList1  timers.o
    0x20007780        -       0x00000014   Zero   RW          494    .bss.xActiveTimerList2  timers.o
    0x20007794        -       0x00000004   Zero   RW           27    .bss.xCommQueue     main.o
    0x20007798        -       0x00000004   Zero   RW           31    .bss.xCommTaskHandle  main.o
    0x2000779c        -       0x00000014   Zero   RW          417    .bss.xDelayedTaskList1  tasks.o
    0x200077b0        -       0x00000014   Zero   RW          418    .bss.xDelayedTaskList2  tasks.o
    0x200077c4        -       0x00000004   Zero   RW           32    .bss.xDisplayTaskHandle  main.o
    0x200077c8        -       0x00000008   Zero   RW          143    .bss.xEnd           heap_2.o
    0x200077d0        -       0x00000001   Zero   RW          140    .bss.xHeapHasBeenInitialised  heap_2.o
    0x200077d1   0x00004174   0x00000003   PAD
    0x200077d4        -       0x00000004   Zero   RW           30    .bss.xHeartRateTaskHandle  main.o
    0x200077d8        -       0x00000004   Zero   RW           28    .bss.xI2CSemaphore  main.o
    0x200077dc        -       0x00000004   Zero   RW          413    .bss.xIdleTaskHandles  tasks.o
    0x200077e0        -       0x00000004   Zero   RW          115    .bss.xMaximumPossibleSuppressedTicks  port.o
    0x200077e4        -       0x00000004   Zero   RW          412    .bss.xNextTaskUnblockTime  tasks.o
    0x200077e8        -       0x00000004   Zero   RW          416    .bss.xNumOfOverflows  tasks.o
    0x200077ec        -       0x00000004   Zero   RW          415    .bss.xPendedTicks   tasks.o
    0x200077f0        -       0x00000014   Zero   RW          409    .bss.xPendingReadyList  tasks.o
    0x20007804        -       0x00000004   Zero   RW          401    .bss.xSchedulerRunning  tasks.o
    0x20007808        -       0x00000004   Zero   RW           26    .bss.xSensorDataQueue  main.o
    0x2000780c        -       0x00000008   Zero   RW          142    .bss.xStart         heap_2.o
    0x20007814        -       0x00000014   Zero   RW          410    .bss.xSuspendedTaskList  tasks.o
    0x20007828        -       0x00000014   Zero   RW          402    .bss.xTasksWaitingTermination  tasks.o
    0x2000783c        -       0x00000004   Zero   RW           29    .bss.xTempTaskHandle  main.o
    0x20007840        -       0x00000004   Zero   RW          406    .bss.xTickCount     tasks.o
    0x20007844        -       0x00000004   Zero   RW          488    .bss.xTimerQueue    timers.o
    0x20007848        -       0x00000004   Zero   RW          489    .bss.xTimerTaskHandle  timers.o
    0x2000784c        -       0x00000004   Zero   RW          411    .bss.xYieldPendings  tasks.o
    0x20007850        -       0x00000000   Zero   RW           42    HEAP                startup_tm4c123.o
    0x20007850        -       0x00000200   Zero   RW           41    STACK               startup_tm4c123.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       416          0          0          4      30017       3611   heap_2.o
       124          0          0          0          0       2173   list.o
      1230        168          0          0         28       3447   main.o
      1070         12          0          4         14       5307   port.o
      1760          0          0          0          0      22954   queue.o
       276         24        620          0        512       5424   startup_tm4c123.o
        96          0          0          4          0       5912   system_tm4c123.o
      3408          0          4          0        560      37690   tasks.o
       928         18          0          0         60      12881   timers.o

    ----------------------------------------------------------------------
      9424        234        656         12      31200      99399   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       116         12          0          0          9          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
       284          0          0          0          0        156   __printf_wp.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        48          6          0          0          0         96   _printf_char_common.o
         6          0          0          0          0          0   _printf_d.o
       120         16          0          0          0         92   _printf_dec.o
         6          0          0          0          0          0   _printf_f.o
      1052          0          0          0          0        148   _printf_fp_dec.o
       128         16          0          0          0         84   _printf_fp_infnan.o
       178          0          0          0          0         88   _printf_intcommon.o
         0          0          0          0          0          0   _printf_percent.o
         4          0          0          0          0          0   _printf_percent_end.o
         6          0          0          0          0          0   _printf_u.o
        16          0          0          0          0         68   _snputc.o
        10          0          0          0          0         68   _sputc.o
        16          0          0          0          0         68   aeabi_memset4.o
       228          4        148          0          0         96   bigflt0.o
      1936        128          0          0          0        672   btod.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
        44         10         28          0          0         76   lc_numeric_c.o
         2          0          0          0          0          0   libinit.o
        18          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
       138          0          0          0          0         80   lludiv10.o
        52          4          0          0          0         84   noretval__2snprintf.o
         8          4          0          0          0         68   rt_locale_intlibspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
       124          0          0          0          0         88   strcmpv7em.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        12          0          0          0          0         68   dretinf.o
        86          4          0          0          0         84   f2d.o
        84          0          0          0          0        196   fcmp.o
        24          0          0          0          0         68   fcmpi.o
       388         76          0          0          0         96   fdiv.o
       104          4          0          0          0         84   feqf.o
        38          0          0          0          0         68   fflt_clz.o
       104          4          0          0          0         84   fgeqf.o
       104          4          0          0          0         84   fleqf.o
       258          4          0          0          0         84   fmul.o
       140          4          0          0          0         84   fnaninf.o
        10          0          0          0          0         68   fretinf.o
         4          0          0          0          0         68   printf1.o
         0          0          0          0          0          0   usenofp.o
        40          0          0          0          0         68   fpclassify.o

    ----------------------------------------------------------------------
      6488        304        176          0         96       4116   Library Totals
        16          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      5076        204        176          0         96       2912   c_w.l
      1356        100          0          0          0       1136   fz_ws.l
        40          0          0          0          0         68   m_ws.l

    ----------------------------------------------------------------------
      6488        304        176          0         96       4116   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     15912        538        832         12      31296     101111   Grand Totals
     15912        538        832         12      31296     101111   ELF Image Totals
     15912        538        832         12          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                16744 (  16.35kB)
    Total RW  Size (RW Data + ZI Data)             31308 (  30.57kB)
    Total ROM Size (Code + RO Data + RW Data)      16756 (  16.36kB)

==============================================================================

